{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput:\n  html_document: default\n  html_notebook: default\n---\n\n```{r}\nlibrary(DescTools)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(readr)\nlibrary(Hmisc)\nlibrary(cowplot)\n\n```\n\n\n\n```{r}\n\n\n\nread_dist_table <- function(path){\n  \ndist_table <- data.table(read_delim(path, \n    \"\\t\", escape_double = FALSE, col_names = FALSE, \n    trim_ws = TRUE))\n\ndist_table <- dist_table[, 2:2001]\ndist_table <- data.table(as.data.frame(t(dist_table)))\ncolnames(dist_table) <- c(\"Position\", \"Occurrences\")\n\ndist_table[,median:=median(Occurrences)]\ndist_table[, Enrrichment:=Occurrences/median]\ndist_table[, Position:=Position-1]\n\nreturn(dist_table)  \n}\n\n\n```\n\n\n\n```{r}\n\n\nplot_density_binomial_RBP <- function(up_plus, up_minus, down_plus, down_minus, observations_up, observations_down, sig){\n\n  \n  up_TOTAL <-  merge(up_plus, up_minus, by=\"Position\")\n  up_TOTAL[,Occurrences:=Occurrences.x+Occurrences.y]\n  up_TOTAL[,Occurrences:=Occurrences.x+Occurrences.y]\n  \n\n  \n  \n  up_TOTAL <- cbind(up_TOTAL, up_TOTAL[, binconf(Occurrences, observations_up, alpha=sig) ])\n\n  up_TOTAL[,median:=median(PointEst)]\n  up_TOTAL[, Enrrichment:=PointEst/median]\n  up_TOTAL[, Enrrichment_l:=Lower/median]\n  up_TOTAL[, Enrrichment_u:=Upper/median]\n  up_TOTAL[, Position:=Position-1]\n\n  \n  \n  down_TOTAL <-  merge(down_plus, down_minus, by=\"Position\")\n  down_TOTAL[,Occurrences:=Occurrences.x+Occurrences.y]\n\n  \n  down_TOTAL <- cbind(down_TOTAL, down_TOTAL[, binconf(Occurrences, observations_down, alpha=sig) ])\n\n  down_TOTAL[,median:=median(PointEst)]\n  down_TOTAL[, Enrrichment:=PointEst/median]\n  down_TOTAL[, Enrrichment_l:=Lower/median]\n  down_TOTAL[, Enrrichment_u:=Upper/median]\n  down_TOTAL[, Position:=Position-1]  \n  \n  \n  up_TOTAL[ ,exon_pos:=\"Upstream\"]\n  down_TOTAL[ ,exon_pos:=\"Downstream\"]\n  \n  TOTAL <- rbind(up_TOTAL, down_TOTAL)\n  \n  TOTAL$exon_pos <-  factor(TOTAL$exon_pos, levels=c(\"Upstream\", \"Downstream\" )) \n  \n  p <- ggplot(TOTAL)+\n    geom_line(aes(x=Position,y=Enrrichment)) +\n    geom_ribbon(aes(ymin=Enrrichment_l, ymax=Enrrichment_u, x=Position), alpha=0.3 )+\n    facet_grid( . ~ exon_pos ) +\n    theme_bw()\n  \n  #show(p)\n  \n  return(TOTAL) \n  \n}\n```\n\n\n\n```{r}\nplot_eql_diff_binomial_table <- function(eql_up_plus, eql_up_minus, eql_down_plus, eql_down_minus, diff_up_plus, diff_up_minus, diff_down_plus, diff_down_minus, TOTAL.eql_up, TOTAL.eql_down, TOTAL.diff_up, TOTAL.diff_down, sig   ){ \n\n\ndiff.up_plus <- read_dist_table(diff_up_plus)\ndiff.up_minus <- read_dist_table(diff_up_minus)\ndiff.down_plus <- read_dist_table(diff_down_plus)\ndiff.down_minus <- read_dist_table(diff_down_minus)\ndiff.up_minus[,Position:=Position*-1]\ndiff.down_minus[,Position:=Position*-1]\n\n\ndiff.TOTAL <- plot_density_binomial_RBP(diff.up_plus, diff.up_minus, diff.down_plus, diff.down_minus, TOTAL.diff_up, TOTAL.diff_down, sig)\n\n\neql.up_plus <- read_dist_table(eql_up_plus)\neql.up_minus <- read_dist_table(eql_up_minus)\neql.down_plus <- read_dist_table(eql_down_plus)\neql.down_minus <- read_dist_table(eql_down_minus)\neql.up_minus[,Position:=Position*-1]\neql.down_minus[,Position:=Position*-1]\n\n\neql.TOTAL <- plot_density_binomial_RBP(eql.up_plus, eql.up_minus, eql.down_plus, eql.down_minus, TOTAL.eql_up, TOTAL.eql_down, sig)\n\ndiff.TOTAL[, type:=\"wG4\"]\neql.TOTAL[, type:=\"woG4\"]\n\ndiff_eql.TOTAL <- rbind(diff.TOTAL, eql.TOTAL)\n\nreturn(diff_eql.TOTAL)\n\n}\n```\n\n\n```{r}\n\n\n\nfiles <- list.files(\"./RBPs/\", pattern =\"exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\")\n\nsamples <- str_replace(str_replace(files,  \"exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", \"\" ), \".bed.list.out.num\", \"\")\n\nmetadata <- fread(\"./RBPs/metadata.tsv\")\n#sample = 'ENCFF786JAM'\n\n\n```\n\n\n\n\n\n```{r, fig.width= 10 , fig.height=5}\n\n\n\n\nfor (sample in samples){\n  \n  if (length( list.files(\"./RBPs/\", pattern = sample))==16){\n\n  RBP_binomial_table_non_template <- plot_eql_diff_binomial_table(\n  paste(\"./RBPs/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  110870 + 109467,\n  108638 + 107433,\n  3587 + 3431,\n  5819 + 5465,\n  0.05\n  )\n  \n  RBP_binomial_table_non_template$pos_int <- cut(RBP_binomial_table_non_template$Position, breaks = 40, labels = seq(-999,1000,50)-1)\n  RBP_binomial_table_non_template_stats <- RBP_binomial_table_non_template[ , .(Enrrichment=mean(Enrrichment), Enrrichment_l=mean(Enrrichment_l), Enrrichment_u=mean(Enrrichment_u))  , by=c( \"exon_pos\", \"type\",  \"pos_int\"  ) ]\n  \n  \n  Total.Overlaps.non_template <- c()\n  \n  for (i in seq(-200, 200, 50)){\n  \n  O.Upstream <- Overlap(\n  RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n  RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n  )\n  \n  O.Downstream <- Overlap(\n  RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n  RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n  )\n  \n  Total.Overlaps.non_template <- rbind(Total.Overlaps.non_template, c(O.Upstream, O.Downstream))\n  \n  }\n  \n  \n  RBP_binomial_table_template <- plot_eql_diff_binomial_table(\n  paste(\"./RBPs/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  110841 + 109504,\n  111508 + 110025,\n  3616 + 3394,\n  2949 + 2873,\n  0.05\n  )\n  \n  \n  \n  RBP_binomial_table_template$pos_int <- cut(RBP_binomial_table_template$Position, breaks = 40, labels = seq(-999,1000,50)-1)\n  RBP_binomial_table_template_stats <- RBP_binomial_table_template[ , .(Enrrichment=mean(Enrrichment), Enrrichment_l=mean(Enrrichment_l), Enrrichment_u=mean(Enrrichment_u))  , by=c( \"exon_pos\", \"type\",  \"pos_int\"  ) ]\n  \n  \n  Total.Overlaps.template <- c()\n  \n  for (i in seq(-200, 200, 50)){\n  \n  O.Upstream <- Overlap(\n  RBP_binomial_table_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n  RBP_binomial_table_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n  )\n  \n  O.Downstream <- Overlap(\n  RBP_binomial_table_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n  RBP_binomial_table_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n  )\n  \n  Total.Overlaps.template <- rbind(Total.Overlaps.template, c(O.Upstream, O.Downstream))\n  \n  }\n  \n  \n  \n  \n  if (0 %in% rbind(Total.Overlaps.non_template,  Total.Overlaps.template) ){\n    \n    \n    \n    RBP_plot.non_template <- ggplot(RBP_binomial_table_non_template) +\n    geom_line(aes(x=Position, y=Enrrichment, color=type)) +\n     geom_ribbon(aes(ymin=Enrrichment_l, ymax=Enrrichment_u, x=Position, fill=type), alpha=0.3 )+\n    xlim(c(-250,250)) +\n    facet_grid(. ~ exon_pos  ) +\n    labs(colour = \"100nt flanking intronic window\", fill=\"100nt flanking intronic window\") +\n    theme_bw() +\n    ggtitle(paste(metadata[`File accession`==sample, `Experiment target`], metadata[`File accession`==sample, `Biosample term name`], sample, \"non-template\")) +\n    theme(legend.position = \"top\", legend.direction = \"horizontal\") +\n    scale_fill_manual(values=c(\"#669900\", \"grey\")) +  \n    scale_color_manual(values=c(\"#669900\", \"darkgrey\"))\n    \n    \n    RBP_plot.template <-  ggplot(RBP_binomial_table_template) +\n    geom_line(aes(x=Position, y=Enrrichment, color=type)) +\n     geom_ribbon(aes(ymin=Enrrichment_l, ymax=Enrrichment_u, x=Position, fill=type), alpha=0.3 )+\n    xlim(c(-250,250)) +\n    facet_grid(. ~ exon_pos  ) +\n    labs(colour = \"100nt flanking intronic window\", fill=\"100nt flanking intronic window\") +\n    theme_bw() +\n    ggtitle(paste(metadata[`File accession`==sample, `Experiment target` ], metadata[`File accession`==sample, `Biosample term name`],  sample, \"template\")) +\n    theme(legend.position = \"top\", legend.direction = \"horizontal\") +\n    scale_fill_manual(values=c(\"#669900\", \"grey\")) +  \n    scale_color_manual(values=c(\"#669900\", \"darkgrey\"))\n    \n    \n    pdf(paste0(\"./RBPs/plots/\", sample , \".pdf\")) \n    plot_grid(RBP_plot.non_template, RBP_plot.template,  nrow =1)\n    dev.off() \n    \n  }\n  \n  }\n\n\n}\n```\n\n\n\n```{r}\nRBP_binomial_table_non_template[exon_pos==\"Upstream\" & pos_int==200, ]\n```\n\n\n\n```{r}\n\ndelta.non_template.rows <- c()\nmatrix.non_template.row_names <- c()\nmatrix.non_template <- c()\n\nsample =\"ENCFF639MYI\"\n#for (sample in samples){\n  \n#  if (length( list.files(\"./RBPs/\", pattern = sample))==16 & (metadata[`File accession`==sample, Assembly]==\"hg19\" ) ){\n\n  RBP_binomial_table_non_template <- plot_eql_diff_binomial_table(\n  paste(\"./RBPs/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  paste(\"./RBPs/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n  110870 + 109467,\n  108638 + 107433,\n  3587 + 3431,\n  5819 + 5465,\n  0.05\n  )\n\n  RBP_binomial_table_non_template$pos_int <- cut(RBP_binomial_table_non_template$Position, breaks = 200, labels = seq(-999,1000,10)-1)\n  RBP_binomial_table_non_template_stats <- RBP_binomial_table_non_template[ , .(Enrrichment=mean(Enrrichment), Enrrichment_l=mean(Enrrichment_l),   Enrrichment_u=mean(Enrrichment_u))  , by=c( \"exon_pos\", \"type\",  \"pos_int\"  ) ]\n  \n  \n  Total.deltas.non_template.up <- c()\n  Total.deltas.non_template.down <- c()\n  \n    for (i in seq(-200, 190, 10)){\n    \n    O.Upstream <- Overlap(\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n    )\n    \n    if (is.na(O.Upstream)){\n      \n      O.Upstream <- 1\n    }\n    \n    O.Downstream <- Overlap(\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n    )\n    \n    if (is.na(O.Downstream)){\n      \n      O.Downstream <- 1\n   }    \n    \n    delta.up <- 0\n    \n    if (O.Upstream==0 ) {\n      \n      delta.up <- RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"wG4\", \"Enrrichment\"] - RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"woG4\", \"Enrrichment\"]\n      \n      \n    }\n      \n      \n    delta.down <- 0\n    \n    if (O.Downstream==0 ) {\n      \n      delta.down <- RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"wG4\", \"Enrrichment\"] - RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"woG4\", \"Enrrichment\"]\n      \n      \n    }\n        \n    Total.deltas.non_template.up <- c(Total.deltas.non_template.up, as.numeric(delta.up))\n    Total.deltas.non_template.down <- c(Total.deltas.non_template.down, as.numeric(delta.down))\n    \n    }\n  \n  protein = metadata[`File accession`==sample, `Experiment target` ]\n  cell_line = metadata[`File accession`==sample, `Biosample term name`]\n  name = paste(protein, cell_line, sample, sep=\"_\")\n  \n  \n  matrix.non_template <- rbind(matrix.non_template, c(Total.deltas.non_template.up, Total.deltas.non_template.down))\n  \n  matrix.non_template.row_names <- c(matrix.non_template.row_names, name)\n\n\n#  }\n  \n#}\n```\n\n\n\n\n\n### Farm\n\n```{r}\n\ndelta.non_template.rows <- c()\nmatrix.non_template.row_names <- c()\nmatrix.non_template <- c()\n\nfor (sample in samples){\n  \n  if ( (length( list.files(\"./scores/\", pattern = sample))==192 ) & (metadata[`File accession`==sample, Assembly]==\"hg19\" ) ) {\n\n    RBP_binomial_table_non_template <- plot_eql_diff_binomial_table(\n      paste(\"./scores/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.woG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.up_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.up_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.down_plus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_plus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      paste(\"./scores/exon.down_minus.bed.filtered.100bp_intron.intersect_wao.All_G4.tsv.clean_minus_strand.wG4.score.\", sample, \".bed.list.out.num\", sep=\"\"),\n      110870 + 109467,\n      108638 + 107433,\n      3587 + 3431,\n      5819 + 5465,\n      0.05\n    )\n\n  RBP_binomial_table_non_template$pos_int <- cut(RBP_binomial_table_non_template$Position, breaks = 200, labels = seq(-999,1000,10)-1)\n  RBP_binomial_table_non_template_stats <- RBP_binomial_table_non_template[ , .(Enrrichment=mean(Enrrichment), Enrrichment_l=mean(Enrrichment_l),   Enrrichment_u=mean(Enrrichment_u))  , by=c( \"exon_pos\", \"type\",  \"pos_int\"  ) ]\n  \n  \n  Total.deltas.non_template.up <- c()\n  Total.deltas.non_template.down <- c()\n  \n      for (i in seq(-200, 190, 10)){\n    \n    O.Upstream <- Overlap(\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n    )\n    \n    if (is.na(O.Upstream)){\n      \n      O.Upstream <- 1\n    }\n    \n    O.Downstream <- Overlap(\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"wG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")],\n    RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"woG4\", c(\"Enrrichment_l\", \"Enrrichment_u\")]\n    )\n    \n    if (is.na(O.Downstream)){\n      \n      O.Downstream <- 1\n   }    \n    \n    delta.up <- 0\n    \n    if (O.Upstream==0 ) {\n      \n      delta.up <- RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"wG4\", \"Enrrichment\"] - RBP_binomial_table_non_template_stats[ exon_pos==\"Upstream\" & pos_int==i & type==\"woG4\", \"Enrrichment\"]\n      \n      \n    }\n      \n      \n    delta.down <- 0\n    \n    if (O.Downstream==0 ) {\n      \n      delta.down <- RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"wG4\", \"Enrrichment\"] - RBP_binomial_table_non_template_stats[ exon_pos==\"Downstream\" & pos_int==i & type==\"woG4\", \"Enrrichment\"]\n      \n      \n    }\n        \n    Total.deltas.non_template.up <- c(Total.deltas.non_template.up, as.numeric(delta.up))\n    Total.deltas.non_template.down <- c(Total.deltas.non_template.down, as.numeric(delta.down))\n    \n    }\n  \n  protein = metadata[`File accession`==sample, `Experiment target` ]\n  cell_line = metadata[`File accession`==sample, `Biosample term name`]\n  name = paste(protein, cell_line, sample, sep=\"_\")\n  \n  \n  matrix.non_template <- rbind(matrix.non_template, c(Total.deltas.non_template.up, Total.deltas.non_template.down))\n  \n  matrix.non_template.row_names <- c(matrix.non_template.row_names, name)\n\n\n  }\n  \n}\n\n\n\n```\n\n\n\n```{r}\nrownames(matrix.non_template) <- matrix.non_template.row_names\ncolnames(matrix.non_template)  <- c(paste0(\"UP\",  as.character(seq(-200,190, 10)) ), paste0(\"DOWN\",  as.character(seq(-200,190, 10)) ))\nwrite.table(DT.non_template, file = \"./non_template.RBP.matrix\", row.names=T, col.names=T, quote=F)\n```\n\n\n\n```{r}\ndata_table.non_template <- fread(\"./RBPs/tables/non_template.RBP.matrix\")\n\nmatrix.non_template <- as.matrix(data_table.non_template[, c(paste0(\"UP\",  as.character(seq(-200,190, 10)) ), paste0(\"DOWN\",  as.character(seq(-200,190, 10)) ))])\nrownames(matrix.non_template) <- data_table.non_template$V1\n```\n\n\n\n```{r}\n\nmatrix.non_template[which(!is.finite(matrix.non_template))] <- 0\n\nmatrix.non_template.filter <- matrix.non_template[ rowSums(abs(matrix.non_template))>30, ]\n\ndim(matrix.non_template)\ndim(matrix.non_template.filter)\n\n```\n\n\n\n\n\n```{r}\ntest = matrix(rnorm(200), 20, 10)\ntest[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3\ntest[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2\ntest[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4\ncolnames(test) = paste(\"Test\", 1:10, sep = \"\")\nrownames(test) = paste(\"Name\", 1:20, sep = \"\")\n\npaletteLength <- 50\nmyColor <- colorRampPalette(c(\"blue\", \"white\", \"red\"))(paletteLength)\n# length(breaks) == length(paletteLength) + 1\n# use floor and ceiling to deal with even/odd length pallettelengths\nmyBreaks <- c(seq(min(test), 0, length.out=ceiling(paletteLength/2) + 1), \n              seq(max(test)/paletteLength, max(test), length.out=floor(paletteLength/2)))\n\n```\n\n```{r}\nbk1 <- c(seq(-6,0.9,by=0.001),0.999)\nbk2 <- c(1.001,seq(1.1,6,by=0.1))\nbk <- c(bk1,bk2)  #combine the break limits for purpose of graphing\n\nmy_palette <- c(colorRampPalette(colors = c(\"darkblue\", \"lightblue\"))(n = length(bk1)-1),\n              \"gray38\", \"gray38\",\n              c(colorRampPalette(colors = c(\"darkred\", \"tomato1\"))(n = length(bk2)-1)))\n\n```\n\n\n```{r, fig.width=10, fig.height=10}\n\nmy.breaks <- c(seq(-6, -0.001, by=0.001),\n               seq(0.001, 6, by=0.001)) \nmy.colors <- c(colorRampPalette(colors = c(\"darkblue\", \"lightblue\", \"antiquewhite\"))(length(my.breaks)/2),\n               colorRampPalette(colors = c(\"bisque\", \"red\", \"firebrick\"))(length(my.breaks)/2))\n\n\nRBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = \"ward.D\", cluster_cols=F, \n                                               color = my.colors, breaks = my.breaks, scale = \"none\",\n                                               show_rownames=F, show_colnames = F)\n```\n\n\n```{r}\nmatrix.non_template[\"ZC3H8−human_K562_ENCFF207UUG\",]\nView(matrix.non_template)\nView(data_table.non_template)\n\ndata_table.non_template[V1==\"ZC3H8−human_K562_ENCFF207UUG\", ]\n```\n\n\n\n\n```{r}\ndata_table.template <- fread(\"./RBPs/tables/template.RBP.matrix\")\n\nmatrix.template <- as.matrix(data_table.template[, c(paste0(\"UP\",  as.character(seq(-200,190, 10)) ), paste0(\"DOWN\",  as.character(seq(-200,190, 10)) ))])\nrownames(matrix.template) <- data_table.template$V1\n```\n\n\n\n```{r}\n\nmatrix.template[which(!is.finite(matrix.template))] <- 0\n\nmatrix.template.filter <- matrix.template[ rowSums(abs(matrix.template))>1, ]\n\n\n\n\ndim(matrix.template.filter)\nView(matrix.template.filter)\n```\n\n```{r}\n\nc(c(81:110 ), (131:160))\n\nmatrix.total[, c( c(1:30), c(51:110), (131:160) )    ]\n```\n\n\n```{r, fig.width=10, fig.height=10}\n\n\nRBP_heatmap.template <- pheatmap::pheatmap(matrix.template, fontsize = 4,   cutree_rows = 8, clustering_method = \"ward.D\", cluster_cols=F,\n                                           color = my.colors, breaks = my.breaks, scale = \"none\",\n                                           show_rownames=F, show_colnames = F)\n```\n\n\n\n\n```{r, fig.height=10, fig.width=10}\nlibrary(ggalluvial)\nlibrary(plyr)\n\nclustering.non_template <- hclust(dist(matrix.non_template), method = \"ward.D\")\nclusters.non_template <- cutree(clustering.non_template, k=8)\n\n\n\n\nclustering.template <- hclust(dist(matrix.template), method = \"ward.D\")\nclusters.template <- cutree(clustering.template, k=8)\n\n\nclustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))\n\n\nclustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template , \n          from =1:8,\n          to = c(\"ns2\", \"iB2\", \"iB1\", \"iBsU\", \"ns1\", \"ieB2\", \"ieB1\", \"iBsD\"))\n\n\nclustering.total$clusters.template <- mapvalues(clustering.total$clusters.template , \n          from =1:8,\n          to = c(\"ns1\", \"ns2\", \"ieB2\", \"iB1\", \"iB2\", \"iBsU\", \"iBsD\", \"ieB1\"))\n\n\nclustering.total$sample <- rownames(clustering.total)\n\nclustering.total <- data.table(clustering.total)\n\n\nclustering.total.stats <- clustering.total[ , .N , by =c(\"clusters.non_template\", \"clusters.template\")]\n\nggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +\n  geom_alluvium( width = 1/12) +\n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) +\n  scale_x_discrete(limits = c(\"clusters.non_template\", \"clusters.template\"), expand = c(.05, .05))\n\n```\n\n\n```{r,  fig.height=10, fig.width=10}\nggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +\n  geom_alluvium(aes(fill=clusters.non_template==\"ieB1\"), width = 1/12) +\n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) +\n  scale_x_discrete(limits = c(\"clusters.non_template\", \"clusters.template\"), expand = c(.05, .05)) +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values=c(\"grey\", \"firebrick\"))\n```\n\n\n\n```{r}\nggplot(as.data.frame(UCBAdmissions),\n       aes(y = Freq, axis1 = Gender, axis2 = Dept)) +\n  geom_alluvium(aes(fill = Admit), width = 1/12) +\n  geom_stratum(width = 1/12, fill = \"black\", color = \"grey\") +\n  geom_label(stat = \"stratum\", label.strata = TRUE) +\n  scale_x_discrete(limits = c(\"Gender\", \"Dept\"), expand = c(.05, .05)) +\n  scale_fill_brewer(type = \"qual\", palette = \"Set1\") \n```\n\n\n\n\n```{r, fig.width=10, fig.height=10}\n\nmatrix.total.trim <- matrix.total[, c( c(1:30), c(51:110), (131:160) )    ]\n\n\nnt_t.colnames <-  c(paste0(\"ntUP\",  as.character(seq(-200,190, 10)) ), paste0(\"ntDOWN\",  as.character(seq(-200,190, 10)) ),  c(paste0(\"tUP\",  as.character(seq(-200,190, 10)) ), paste0(\"tDOWN\",  as.character(seq(-200,190, 10)) )) )\n\nmatrix.total <- cbind(matrix.non_template, matrix.template)\n\ncolnames(matrix.total) <- nt_t.colnames\n\nRBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = \"ward.D\", cluster_cols=F,\n                                        color = my.colors, breaks = my.breaks, scale = \"none\",\n                                        show_rownames=T, show_colnames = F)\n\n```\n\n\n```{r}\n?hclust()\n```\n\n\n```{r}\n\nhc_rows <- hclust(dist(matrix.total.trim), method = \"ward.D\")\n\nRBP_clusters <-  cutree(hc_rows, k=10)\n\n\nRBP_clusters.table <- data.table(cbind(names(RBP_clusters), as.numeric(RBP_clusters)))\n\ncolnames(RBP_clusters.table) <- c(\"ID\", \"cluster\")\n\nRBP_clusters.table <- data.table(RBP_clusters.table)\n\nhclust(matrix.total.trim)\n\n\n\n\nRBP_clusters.table <- cbind(RBP_clusters.table, str_split_fixed(RBP_clusters.table$ID, \"_\", 3))\n\n\nRBP_clusters.table <- cbind(RBP_clusters.table, str_split_fixed(RBP_clusters.table$V1, \"-\", 2))\n\nRBP_clusters.table <- RBP_clusters.table[, c(1,2,4,5,6,7)]\n\ncolnames(RBP_clusters.table) <- c(\"ID\", \"cluster\", \"Cell\", \"File\", \"Gene\", \"Organism\")\n\n\n\n```\n\n\n```{r}\ndim(matrix.total)\n```\n\n\n```{r}\nggplot(RBP_clusters.table) +\n  geom_bar(aes(x=cluster, fill=Cell), stat = \"count\")\n```\n\n\n\n```{r}\ncat(unique(RBP_clusters.table[ cluster==\"10\", Gene]), sep=\"\\n\" )\n\n```\n\n\n\n```{r}\nView(matrix.total[ , c(c(1:30), c(50:90), c(110, 160)) ])\n```\n\n\n```{r}\n\nc(c(1:30), c(40:70), c(80, 160))\n\nmatrix.total[1:300,]\n```\n\n```{r}\nmatrix.total.trim\n```\n\n",
    "created" : 1574795748653.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4238271351",
    "id" : "2C3C91F2",
    "lastKnownWriteTime" : 1575769257,
    "last_content_update" : 1575769257631,
    "path" : "~/Google_Drive/Results/Non_B/RBPs_analysis.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}