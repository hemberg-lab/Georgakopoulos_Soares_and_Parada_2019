{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Parada et al\"\noutput: html_notebook\n---\n\n\n```{r}\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(gplots)\nlibrary(pheatmap)\nlibrary(plyr)\nset.seed(123)\nlibrary(data.table)\nlibrary(magrittr)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(cowplot)\nlibrary(igraph)\n```\n\n##### ENCODE PSI Analysis ######\n\n\n\n\n\n```{r}\n\nME_cov_filtered <- read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/out_filtered_ME.cov.txt\", \"\\t\", escape_double = FALSE, trim_ws = TRUE, progress = FALSE)\nME_cov_filtered <- data.table(ME_cov_filtered)\n\n\n\"chr11:104302410+104306625\"\n\n\nME_final <- data.table(read.delim(\"~/Google_Drive/Results/ME/Paper/New_report/out_filtered_ME.txt\", header=TRUE, sep=\"\\t\"))\n\n\nME_low_score <- data.table(read.delim(\"~/Google_Drive/Results/ME/Paper/New_report/out_low_scored_ME.txt\", header=TRUE, sep=\"\\t\"))\n\n\nME_final <- rbind(ME_final, ME_low_score[ME_type==\"RESCUED\", ])\n\n\n\n```\n\n```{r}\nME_cov_filtered2 <- fread(\"~/Google_Drive/Results/ME/Paper/New_report/out_filtered_ME.cov.txt\")\n```\n\n\n```{r}\nME_cov_filtered[ME==\"chr11_+_104305381_104305409\" & sum_ME_coverage > 5, c(\"FILE_NAME\", \"ME\", \"sum_ME_SJ_coverage_up\", \"sum_ME_SJ_coverage_down\")]\n```\n\n\n```{r}\nmetadata[File.accession==\"ENCFF458NWF\"]\n```\n\n\n\n```{r}\n\nENCODE_metadata <- read.delim(\"~/Google_Drive/Results/ME/mm10/metadata.tsv\",  header=TRUE, sep=\"\\t\")\n\nENCODE_metadata <- data.table(ENCODE_metadata)\n\n\n\nWeyn_el_al_metadata <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/Weyn_el_al.metadata.txt\",  \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\nWeyn_el_al_metadata[, `:=`(File.accession=Run,\n                    Biosample.Age=age,\n                    Experiment.date.released=LoadDate,\n                    Biosample.term.name=tissue,\n                    Paired.end=NA,\n                    Paired.with=\"\",\n                    Audit.WARNING=\"\") ]\n\nmetadata <- rbind( ENCODE_metadata[, c(\"File.accession\", \"Biosample.Age\", \"Experiment.date.released\", \"Biosample.term.name\", \"Paired.end\", \"Paired.with\", \"Audit.WARNING\")],\n                  Weyn_el_al_metadata[, c(\"File.accession\", \"Biosample.Age\", \"Experiment.date.released\", \"Biosample.term.name\", \"Paired.end\", \"Paired.with\", \"Audit.WARNING\")] )\n\n\nmetadata <- metadata[Audit.WARNING!=\"low replicate concordance, missing flowcell_details\",]\n\n\nTissues <- as.character(metadata$Biosample.term.name)\nnames(Tissues) <- as.character(metadata$File.accession)\n\nAges <- as.character(metadata$Biosample.Age)\nnames(Ages) <- as.character(metadata$File.accession)\n```\n\n\n\n```{r}\n\npaired_metadata <- metadata[Paired.end==\"1\", c(\"File.accession\", \"Paired.with\")]\n\npaired_end_sum <- ME_cov_filtered[FILE_NAME %in% paired_metadata$File.accession, c(\"sum_ME_coverage\", \"sum_SJ_coverage\", \"total_cov_alternatives_3\", \"total_cov_alternatives_5\")] +\n\nME_cov_filtered[FILE_NAME %in% paired_metadata$Paired.with, c(\"sum_ME_coverage\", \"sum_SJ_coverage\", \"total_cov_alternatives_3\", \"total_cov_alternatives_5\")]\n\n\n\n\nME_cov_filtered <- ME_cov_filtered[ FILE_NAME  %in% as.character(paired_metadata$Paired.with) ==FALSE ]\n\nME_cov_filtered[ FILE_NAME  %in% as.character(paired_metadata$File.accession),\n                 `:=`(sum_ME_coverage=paired_end_sum$sum_ME_coverage,\n                      sum_SJ_coverage=paired_end_sum$sum_SJ_coverage,\n                       total_cov_alternatives_3=paired_end_sum$total_cov_alternatives_3,\n                       total_cov_alternatives_5=paired_end_sum$total_cov_alternatives_5)] \n\n```\n\n\n\n\n\n\n```{r}\nTOTAL_ME_cov_filtered <- ME_cov_filtered\n\nME_cov_filtered <- ME_cov_filtered[ME %in% ME_final[, ME]  , ]\n```\n\n\n\n\n\n\n\n```{r, cache=TRUE, warning=FALSE, message=FALSE}\n\n\n\nME_cov_filtered[total_cov_alternatives_5==\"None\", total_cov_alternatives_5:=0]\nME_cov_filtered[total_cov_alternatives_3==\"None\", total_cov_alternatives_3:=0]\n\nME_cov_filtered[,PSI:=(sum_ME_coverage/(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5))]\n\n\nmin_PSI_sum <- 5\n  \nME_cov_filtered[sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5<min_PSI_sum, PSI:=NaN]\n\nggplot(ME_cov_filtered, aes(PSI))+\n  geom_histogram(binwidth=0.05)\n\n\n\n```\n\n\n\n\n\n```{r}\n\n\n\nME_cov_filtered_ENCODE <- unique(ME_cov_filtered[FILE_NAME %in% metadata[Biosample.term.name!=\"whole cortex\", File.accession],])\n\n\n\nTissue_PSI_matrix_melt <- ME_cov_filtered_ENCODE[, c(\"ME\", \"FILE_NAME\", \"PSI\") ]\nTissue_PSI_matrix_dcast <- reshape2::dcast(Tissue_PSI_matrix_melt, ME ~ FILE_NAME)\n\n\n\n\nrow.names(Tissue_PSI_matrix_dcast) <- Tissue_PSI_matrix_dcast$ME\nTissue_PSI_matrix_dcast <- data.matrix(Tissue_PSI_matrix_dcast)[,-1]\n\n\n#colnames(Tissue_PSI_matrix_dcast) <- as.character( paste(sep = \" \", Tissues[colnames(Tissue_PSI_matrix_dcast)], Ages[colnames(Tissue_PSI_matrix_dcast)])) #To replase the file name by the biological sample name\n\n#Tissue_PSI_matrix_dcast <- Tissue_PSI_matrix_dcast[, order(paste(sep = \" \", Tissues[colnames(Tissue_PSI_matrix_dcast)], Ages[colnames(Tissue_PSI_matrix_dcast)]))]\n\n\n```\n\n\n\n\n\n```{r}\nd <- dist(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 210, ])\n\ntissue_heatmap <- pheatmap::pheatmap(d, fontsize = 4,  cutree_rows = 10, cutree_cols = 13, clustering_method = \"ward.D2\")\n\n\n```\n\n```{r}\ndim(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 180, ])\n```\n\n```{r}\nlibrary(RColorBrewer)\n\nmycolors = colorRampPalette(colors = c(\"red\", \"grey\", \"yellow\", \"red\"))(100)\n\nmycolors <- colorRampPalette(rev(brewer.pal(n = 7, name =\"RdYlBu\")))(100)\n\n#colnames(Tissue_PSI_matrix_dcast) <- NULL\n#rownames(Tissue_PSI_matrix_dcast) <-NULL\n\ntissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 180, ],  , fontsize = 4,  cutree_rows = 18, cutree_cols = 14, clustering_method = \"ward.D2\", col = mycolors)\n\n```\n\n\n\n\n```{r}\n\nTissue_PSI_matrix_dcast <- reshape2::dcast(Tissue_PSI_matrix_melt, ME ~ FILE_NAME)\nrow.names(Tissue_PSI_matrix_dcast) <- Tissue_PSI_matrix_dcast[,1]\nTissue_PSI_matrix_dcast <- data.matrix(Tissue_PSI_matrix_dcast)[,-1]\n\n\nd <- Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 180, ]\n\n\n#d <- Tissue_PSI_matrix_dcast_NO_NA\n\n\nhc_cols <- hclust(dist(t(d)), method = \"ward.D2\")\nhc_rows <- hclust(dist(d), method = \"ward.D2\")\n\n\n```\n\n```{r}\nTissues_name <- as.character(metadata$Biosample.term.name)\nnames(Tissues_name) <- as.character(metadata$File.accession)\n\nTissues_age <- as.character(metadata$Biosample.Age)\nnames(Tissues_age) <- as.character(metadata$File.accession)\n\nTissue_date <- as.character(metadata$Experiment.date.released)\nnames(Tissue_date) <- as.character(metadata$File.accession)\n\n```\n\n\n\n```{r}\nTissue_clusters <- cutree(hc_cols, k = 14)\nTissue_clusters <- cbind(Tissue_clusters, Tissues_name[names(Tissue_clusters)], Tissues_age[names(Tissue_clusters)], Tissue_date[names(Tissue_clusters)]) \n\ncolnames(Tissue_clusters) <- c(\"cluster\", \"name\", \"age\", \"date\")\n\nTissue_clusters <- data.frame(Tissue_clusters)\n\n#Tissue_clusters_sum[which(grepl(\"hindbrain|midbrain|forebrain|neural\\ tube\", Tissue_clusters_sum$name)), ]\n\nTissue_clusters$name <- factor(Tissue_clusters$name, level=c( \"skeletal muscle tissue\", \"heart\", \"thymus\", \"spleen\", \"liver\",  \"adrenal gland\", \"intestine\", \"stomach\", \"lung\",  \"kidney\", \"bladder\", \"limb\", \"embryonic facial prominence\", \"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\"))\n\nTissue_clusters$age <- factor(Tissue_clusters$age, levels=c(\"10.5 day\", \"11.5 day\", \"12.5 day\", \"13.5 day\", \"14.5 day\", \"15.5 day\", \"16.5 day\", \"0 day\", \"8 week\"))\n```\n\n\n\n\n```{r,  fig.height=4, fig.width=15}\n\n\n#Tissue_clusters_sum <- Tissue_clusters %>% group_by(cluster, name, age ) %>% summarise(count = n())\n\nTissue_clusters_DT <- data.table(Tissue_clusters)\nTissue_clusters_sum <- Tissue_clusters_DT[, .(count=.N) , by=c(\"cluster\", \"name\", \"age\" )]\n\n## NA ###\n\nTissue_clusters_sum$cluster <- factor(Tissue_clusters_sum$cluster , levels =c(2, 11, 8, 3, 10, 9, 13, 4, 14, 7, 1, 6, 12, 5))\n\n\nggplot( Tissue_clusters_sum, aes(age, name) ) +\n  geom_tile(aes(fill = count)) +\n  scale_fill_gradient(low=\"grey\", high=\"red\")+\n  facet_grid(. ~ cluster ) +\n  theme_bw()+\n  labs(fill = \"Sample count\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0),\n    axis.title = element_text(colour = NA),\n    strip.text = element_text(hjust = 0.5))\n\n```\n\n\n```{r}\nwrite.table(d, file = \"./ME_PSI_matrix.txt\", append = FALSE, quote = F, sep = \" \",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n```\n\n\n\n\n```{r, fig.height=4, fig.width=15}\nhcd <- as.dendrogram(hc_cols)\n\n\nplot(hcd, leaflab = \"none\") +\nrect.hclust(hc_cols, k = 14, border = my_col)\n```\n\n\n\n\n\n#### filling NAs\n\n```{r}\n\nre_melted_Tissue_PSI_matrix <- data.table(melt(Tissue_PSI_matrix_dcast[apply(Tissue_PSI_matrix_dcast, 1, function(x) length(which(is.na(x)))) < 180, ]))\n\n\n\ncolnames(re_melted_Tissue_PSI_matrix) <- c(\"ME\", \"FILE\", \"PSI\")\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==1), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==2), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==3), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==4), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==5), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==6), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==7), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==8), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==9), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==10), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==11), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==12), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==13), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[FILE %in% rownames(Tissue_clusters[which(Tissue_clusters$cluster==14), ]),\n                             mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[ , TOTAL_mean_PSI:=(mean(PSI, na.rm = TRUE)), by=\"ME\"]\n\nre_melted_Tissue_PSI_matrix[ mean_PSI == \"NaN\" , mean_PSI:=TOTAL_mean_PSI]\n\nre_melted_Tissue_PSI_matrix[ PSI == \"NaN\" , PSI:=mean_PSI]\n\n\n\n```\n\n\n\n```{r}\n\nTissue_PSI_matrix_dcast_NO_NA <- reshape2::dcast(re_melted_Tissue_PSI_matrix, ME ~ FILE, value.var=\"PSI\")\n\nrow.names(Tissue_PSI_matrix_dcast_NO_NA) <- Tissue_PSI_matrix_dcast_NO_NA[,1]\nTissue_PSI_matrix_dcast_NO_NA <- data.matrix(Tissue_PSI_matrix_dcast_NO_NA)[,-1]\n\n\nd <- Tissue_PSI_matrix_dcast_NO_NA\n\n\n\n\nhc_cols_NO_NA <- hclust(dist(t(d)), method = \"ward.D2\")\n\n\n\n```\n\n\n\n```{r}\nTissue_clusters_NO_NA <- cutree(hc_cols_NO_NA, k = 14)\nTissue_clusters_NO_NA <- cbind(Tissue_clusters_NO_NA, Tissues_name[names(Tissue_clusters_NO_NA)], Tissues_age[names(Tissue_clusters_NO_NA)], Tissue_date[names(Tissue_clusters_NO_NA)]) \n\ncolnames(Tissue_clusters_NO_NA) <- c(\"cluster\", \"name\", \"age\", \"date\")\n\nTissue_clusters_NO_NA <- data.frame(Tissue_clusters_NO_NA)\n\n#Tissue_clusters_NO_NA_sum[which(grepl(\"hindbrain|midbrain|forebrain|neural\\ tube\", Tissue_clusters_NO_NA_sum$name)), ]\n\nTissue_clusters_NO_NA$name <- factor(Tissue_clusters_NO_NA$name, level=c( \"skeletal muscle tissue\", \"heart\", \"thymus\", \"spleen\", \"liver\",  \"adrenal gland\", \"bladder\", \"intestine\", \"stomach\", \"lung\",  \"kidney\", \"limb\", \"embryonic facial prominence\", \"forebrain\", \"hindbrain\", \"midbrain\", \"neural tube\"))\n\nTissue_clusters_NO_NA$age <- factor(Tissue_clusters_NO_NA$age, levels=c(\"10.5 day\", \"11.5 day\", \"12.5 day\", \"13.5 day\", \"14.5 day\", \"15.5 day\", \"16.5 day\", \"0 day\", \"8 week\"))\n```\n\n\n```{r, fig.height=4, fig.width=15}\n\n\nTissue_clusters_NO_NA_DT <- data.table(Tissue_clusters_NO_NA)\nTissue_clusters_NO_NA_sum <- Tissue_clusters_NO_NA_DT[, .(count=.N) , by=c(\"cluster\", \"name\", \"age\" )]\n\n\n\n## NO NA ###\n\n\nTissue_clusters_NO_NA_sum$cluster <- factor(Tissue_clusters_NO_NA_sum$cluster ,  levels =c( 14, \n                                                                               4, \n                                                                               11, \n                                                                               12,\n                                                                               13, \n                                                                               7, \n                                                                               1, \n                                                                               6,\n                                                                               5,\n                                                                               10,\n                                                                               3,\n                                                                               8, \n                                                                               9,\n                                                                               2))\n\n\n\n\n\nggplot( Tissue_clusters_NO_NA_sum, aes(age, name) ) +\n  geom_tile(aes(fill = count)) +\n  scale_fill_gradient(low=\"grey\", high=\"red\")+\n  facet_grid(. ~ cluster ) +\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 90, hjust = 0))\n\n```\n\n\n\n\n```{r}\nhcd <- as.dendrogram(hc_cols)\n\n\nplot(hcd, leaflab = \"none\") +\nrect.hclust(hc_cols_NO_NA, k = 14, border = my_col)\n```\n\n\n\n\n\n```{r}\nlibrary(RColorBrewer)\n\nmycolors = colorRampPalette(colors = c(\"red\", \"grey\", \"yellow\", \"red\"))(100)\n\nmycolors <- colorRampPalette(rev(brewer.pal(n = 7, name =\"RdYlBu\")))(100)\n\ntissue_heatmap <- pheatmap::pheatmap(Tissue_PSI_matrix_dcast_NO_NA,  , fontsize = 4,  cutree_rows = 16, cutree_cols = 13, clustering_method = \"ward.D2\", col = mycolors)\n\n```\n\n\n\n#PCA\n\n\n```{r}\n\nlibrary('factoextra')\nlibrary(\"RColorBrewer\")\n\n#pcaME <- princomp( Tissue_PSI_matrix_dcast_NO_NA, cor = TRUE)\n\n\n\n# Get principal component vectors using prcomp instead of princomp\npc <- prcomp(t(Tissue_PSI_matrix_dcast_NO_NA), cor=TRUE, scores=TRUE)\n\n\n\n\nget_colors <- function(groups, group.col = palette()){\n  groups <- as.factor(groups)\n  ngrps <- length(levels(groups))\n  if(ngrps > length(group.col)) \n    group.col <- rep(group.col, ngrps)\n  color <- group.col[as.numeric(groups)]\n  names(color) <- as.vector(groups)\n  return(color)\n}\n\n\n\n\n\nplot(pc,type=\"lines\")\n\n\n\n\nTissue_clusters_NO_NA$cluster <- factor(Tissue_clusters_NO_NA$cluster, levels =c( 12, 1, 7, 5,  14, 9, 10,  6, 13, 4, 3, 8, 11 , 2))\n\n\n\n\nmy_col <-get_colors(Tissue_clusters_NO_NA$cluster, group.col=colorRampPalette(colors = c(\"black\",  \"purple\", \"blue\", \"seagreen\", \"gold\", \"red\"))(14))\n\n\ncomp <- data.frame(pc$x[,c(1,2)])\nplot(comp, pch=16, col=\"white\" ) +\ntext( comp , labels=Tissue_clusters_NO_NA$cluster, col=my_col)\n\n\ncomp <- data.frame(pc$x[,c(1,3)])\nplot(comp, pch=16, col=\"white\" ) +\ntext( comp , labels=Tissue_clusters_NO_NA$cluster, col=my_col)\n\n\ncomp <- data.frame(pc$x[,c(1,4)])\nplot(comp, pch=16, col=\"white\" ) +\ntext( comp , labels=Tissue_clusters_NO_NA$cluster, col=my_col)\n\ncomp <- data.frame(pc$x[,1:4])\nplot(comp, pch=16, col=my_col )\n\n\n\n\n\n#plot3d(comp$PC1, comp$PC2, comp$PC3, col=get_colors(Tissue_clusters_NO_NA$cluster), \n#       xlab=\"PC1\",\n#       ylab=\"PC2\",\n#       zlab=\"PC3\")\n\n#install.packages(\"plot3D\")\n#library(plot3D)\n\n\nTissue_clusters_NO_NA_table <- data.table(Tissue_clusters_NO_NA)\nTissue_clusters_NO_NA_table$FILE_NAME <- rownames(Tissue_clusters_NO_NA)\n\nget_colors(Tissue_clusters_NO_NA$cluster, group.col=colorRampPalette(rev(brewer.pal(n = 7, name =\"RdYlBu\")))(100))\n\n```\n\n\n\n\n```{r}\n\n\ncomp\n\n```\n\n\n\n\n```{r}\n\n\nget_colors <- function(variable, group.col = palette()){\n  \n  \n  groups <- as.factor(groups)\n  ngrps <- length(levels(groups))\n  if(ngrps > length(group.col)) \n    group.col <- rep(group.col, ngrps)\n  color <- group.col[as.numeric(groups)]\n  names(color) <- as.vector(groups)\n  return(color)\n}\n\n\n\n\n\n```\n\n\n\n\n\n\n#### ME Clusters\n\n\n\n\n\n\n```{r, fig.height= 10, fig.width= 5}\n\n\nME_clusters <- cutree(hc_rows, k=18)\n\nME_clusters <- cbind(ME_clusters, names(ME_clusters))\n\ncolnames(ME_clusters) <- c(\"ME_clusters\", \"ME\")\n\nME_clusters_table <- data.table(ME_clusters)\n\nME_clusters_PSI <-  merge(ME_cov_filtered, ME_clusters , by=c(\"ME\"))\n\n\nME_clusters_PSI <- ME_clusters_PSI[, c(\"ME\", \"FILE_NAME\", \"ME_clusters\", \"PSI\")]\n  \n\nTissue_clusters$FILE_NAME <- row.names(Tissue_clusters)\n\n\ncolnames(Tissue_clusters) <- c(\"Tissue_clusters\", \"name\",  \"age\", \"date\", \"FILE_NAME\")\n\nME_Tissues_clusters_PSI <- merge(ME_clusters_PSI, Tissue_clusters, by=\"FILE_NAME\")\n\nME_Tissues_clusters_PSI <- data.table(ME_Tissues_clusters_PSI)\n\n\nME_Tissues_clusters_PSI$ME_clusters <- mapvalues(ME_Tissues_clusters_PSI$ME_clusters, \n          from =1:18,\n          to = c(\"I1\", \"E1\", \"E3\", \"I2\", \"N1\", \"M1\", \"N2\", \"NM3\", \"NM2\", \"N5\", \"NM1\", \"N3\", \"N4\", \"NN2\", \"E2\", \"I4\", \"I3\", \"NN1\"))\n\n\n#sub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI[which(ME_Tissues_clusters_PSI$ME_clusters %in%  c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15)),]\n\n\nsub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI[ME_clusters %in%  c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"N4\", \"N5\", \"NN1\"), ]\nsub_ME_Tissues_clusters_PSI$ME_clusters <- factor(sub_ME_Tissues_clusters_PSI$ME_clusters, levels = c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"N4\", \"N5\", \"NN1\"))\n\n\n\n#sub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI[ME_clusters %in%  c(\"I1\", \"I2\", \"I3\", \"I4\", \"E1\", \"E2\", \"E3\", \"NN2\"), ]\n#sub_ME_Tissues_clusters_PSI$ME_clusters <- factor(sub_ME_Tissues_clusters_PSI$ME_clusters, levels = c(\"I1\", \"I2\", \"I3\", \"I4\", \"E1\", #\"E2\", \"E3\", \"NN2\"))\n\n\n#sub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI\n\n\n\n\n\n#sub_ME_Tissues_clusters_PSI$ME_clusters <- factor(sub_ME_Tissues_clusters_PSI$ME_clusters, levels = c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15))\n\n\n#sub_ME_Tissues_clusters_PSI$ME_clusters <- mapvalues(sub_ME_Tissues_clusters_PSI$ME_clusters, \n#          from =c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15),\n#          to = c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", \"M1\", \"E1\", \"NN1\", \"NN2\", \"NN3\"))\n\n\n#sub_ME_Tissues_clusters_PSI$ME_clusters <- factor(sub_ME_Tissues_clusters_PSI$ME_clusters, levels = c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", #\"M1\", \"E1\", \"NN1\", \"NN2\", \"NN3\"))\n\n\n#sub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI[which(ME_Tissues_clusters_PSI$ME_clusters %in%  c(\"5\", \"4\", \"6\", \"8\", \"7\", \"9\")),]\n#sub_ME_Tissues_clusters_PSI$ME_clusters <- factor(sub_ME_Tissues_clusters_PSI$ME_clusters, levels = c(\"5\", \"4\", \"6\", \"8\", \"7\", \"9\"))\n\n\n\n#sub_ME_Tissues_clusters_PSI <- ME_Tissues_clusters_PSI\n\n\n\n\n\nsub_ME_Tissues_clusters_PSI$Tissue_clusters <- factor(sub_ME_Tissues_clusters_PSI$Tissue_clusters,  levels = c( 12, 7, 1, 5, 4, 14, 13, 6, 10, 9,  3, 8, 11, 2))\n\n\nggplot(data= sub_ME_Tissues_clusters_PSI) +\n  geom_violin(aes(factor(Tissue_clusters), PSI)) +\nfacet_grid( ME_clusters ~ .)\n  \n  \n\n\n\n\n\n```\n\n\n\n```{r}\nwrite.table(Tissue_clusters, file = \"./../New_report/Tissue.clusters.txt\", append = FALSE, quote = F, sep = \"\\t\",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n```\n\n\n\n\n```{r,  fig.height= 10, fig.width= 5}\n\n\nsub_ME_Tissues_clusters_PSI <- data.table(sub_ME_Tissues_clusters_PSI)\n\nsub_ME_Tissues_clusters_PSI <- sub_ME_Tissues_clusters_PSI\n\nsub_ME_Tissues_clusters_PSI_aggregated <-  sub_ME_Tissues_clusters_PSI[, list(PSI=mean(PSI, na.rm = TRUE)), by=list(ME, ME_clusters,  Tissue_clusters) ]\n\n\nsub_ME_Tissues_clusters_PSI_aggregated_mean <-  sub_ME_Tissues_clusters_PSI_aggregated[, list(PSI= mean(PSI, na.rm=TRUE) ), by=list(ME_clusters,  Tissue_clusters) ]\n\n\n\n\nggplot( ) +\n        geom_line(data= sub_ME_Tissues_clusters_PSI_aggregated, aes(factor(Tissue_clusters), PSI, group=ME), colour=\"grey\") +\n        geom_line(data = sub_ME_Tissues_clusters_PSI_aggregated_mean, aes(factor(Tissue_clusters), PSI, group=ME_clusters),  colour=\"red\" ) +\n        facet_grid( ME_clusters ~ .) +\n        xlab(\"Sample clusters (sorted by PC1)\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black'))\n\n\n\n\n\n#sub_ME_Tissues_clusters_PSI_brain <- subset(sub_ME_Tissues_clusters_PSI, (name==\"forebrain\" | name==\"midbrain\" | name==\"hindbrain\" | name==\"neural tube\") & (ME_clusters != 9))\n\n\nsub_ME_Tissues_clusters_PSI_brain <- subset(sub_ME_Tissues_clusters_PSI, (name==\"forebrain\" | name==\"midbrain\" | name==\"hindbrain\" | name==\"neural tube\") )\n\n\n#sub_ME_Tissues_clusters_PSI_aggregated_brain[ ME_clusters==9,]\n\nsub_ME_Tissues_clusters_PSI_aggregated_brain <-  sub_ME_Tissues_clusters_PSI_brain[, list(PSI=mean(PSI, na.rm = TRUE)), by=list(ME, ME_clusters,  age) ]\nsub_ME_Tissues_clusters_PSI_aggregated_brain_mean <-  sub_ME_Tissues_clusters_PSI_aggregated_brain[, list(PSI= mean(PSI, na.rm=TRUE) ), by=list(ME_clusters,  age) ]\n\n\n\n\nggplot( ) +\n        geom_line(data= sub_ME_Tissues_clusters_PSI_aggregated_brain, aes(factor(age), PSI, group=ME), colour=\"grey\") +\n        geom_line(data = sub_ME_Tissues_clusters_PSI_aggregated_brain_mean, aes(factor(age), PSI, group=ME_clusters),  colour=\"red\" ) +\n        facet_grid( ME_clusters ~ .) +\n        xlab(\"Develomental stage\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black'), axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\nME_len_cluster <- merge(ME_clusters, ME_final[, c(\"ME\", \"len_micro_exon_seq_found\")], by=\"ME\")\n\n\nggplot( ME_len_cluster[ ME_clusters %in%  c(3, 7, 5, 11, 6, 12,  9, 4, 8, 16, 14),]) +\n  \n  geom_histogram(aes( len_micro_exon_seq_found), bins = 28) +\n  facet_grid( ME_clusters ~ .) +\n  theme(panel.background = element_rect(fill = 'white', colour = 'black'), axis.text.x = element_text(angle = 90, hjust = 1))\n\n  \n```\n\n\n\n\n\n\n```{r,fig.height= 10, fig.width= 5}\n\n\n\nME_len_cluster <- merge(ME_clusters, ME_final[, c(\"ME\", \"len_micro_exon_seq_found\")], by=\"ME\")\n\ncolnames(ME_len_cluster) <- c(\"ME\", \"ME_cluster\", \"len_micro_exon_seq_found\")\n\nME_len_cluster <- data.table(ME_len_cluster)\n\n\nsub_ME_len_cluster <- ME_len_cluster[ ME_cluster %in%  c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15),]\n\n\nsub_ME_len_cluster$ME_cluster <- factor(sub_ME_len_cluster$ME_cluster, level =c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15))\n\nggplot( data =sub_ME_len_cluster) +\n  \n  geom_histogram(aes( len_micro_exon_seq_found), bins = 28) +\n  facet_grid( ME_cluster ~ .) +\n  theme(panel.background = element_rect(fill = 'white', colour = 'black'), axis.text.x = element_text(angle = 90, hjust = 1))\n\n  \n\n```\n\n```{r}\n\n\n\n\nME_cluster_info <- merge(ME_clusters, ME_final[, c(\"ME\", \"len_micro_exon_seq_found\", \"U2_scores\")], by=\"ME\")\nME_cluster_info <- data.table(ME_cluster_info)\n\n\n\nME_cluster_info$ME_clusters <- mapvalues(ME_cluster_info$ME_clusters, \n          from =1:18,\n          to = c(\"I1\", \"E2\", \"E1\", \"I2\", \"N1\", \"M1\", \"N2\", \"NM3\", \"NM2\", \"N5\", \"NM1\", \"N3\", \"N4\", \"NN2\", \"E3\", \"I4\", \"I3\", \"NN1\"))\n\n\n\n\n\nME_cluster_info_by <- ME_cluster_info[ , .(asym = sum(len_micro_exon_seq_found %% 3),\n                    mean_U2_score = mean(U2_scores),\n                    total=.N\n                    ), by=\"ME_clusters\"  ]\n\nME_cluster_info_by[, symetrical_fraction:=(total-asym)/total]\n\n#ME_cluster_info_by$ME_class <- mapvalues(ME_cluster_info$ME_clusters, \n#          from =c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", \"M1\", \"E1\", \"NN1\", \"NN2\", \"NN3\", \"C1\", \"C2\", \"E2\", \"C3\"),\n#          to = c(\"Neuro-Muscular\", \"Neuronal\", \"Neuro-Muscular\", \"Neuronal\", \"Neuro-Muscular\", \"Neuronal\", \"Neuro-Muscular\", \"Neuronal\", \"Neuronal\", \"Muscular\", #\"Excluded\", \"Non-Neuronal\", \"Non-Neuronal\", \"Non-Neuronal\", \"Constitutive\", \"Constitutive\", \"Excluded\", \"Constitutive\"))\n\n\nggplot(ME_cluster_info_by) +\n  geom_text (aes(symetrical_fraction, mean_U2_score, label=ME_clusters)) +\n  xlab(\"Symetrical microexon fraction\") +\n  ylab(\"Mean U2 score\")\n  \n```\n\n\n```{r}\nmicroexons_Vastdb\n```\n\n\n```{r, fig.height= 5, fig.width= 15}\n\nmicroexons_Vastdb <- read_delim(\"~/Google_Drive/Results/ME/mm10/VastDB/VastDb.microexons.txt\", \n    \" \", escape_double = FALSE, col_names = FALSE, \n    trim_ws = TRUE)\n\n\nmicroexons_Vastdb <- microexons_Vastdb$X1\n\n\n\nmicroexons_GENCODE <- read_delim(\"~/Google_Drive/Results/ME/mm10/gencode.vM16.annotation.microexons.txt\", \n    \" \", escape_double = FALSE, col_names = FALSE, \n    trim_ws = TRUE)\n\n\nmicroexons_GENCODE <- microexons_GENCODE$X1\n\n\n\n\nME_cluster_db <- ME_cluster_info[ , .( Novel_VastDB = sum(ME %in% microexons_Vastdb == FALSE),\n                                            Novel_GENCODE =  sum(ME %in% microexons_GENCODE == FALSE),\n                                            Novel_both = sum(ME %in% c(microexons_Vastdb, microexons_GENCODE) == FALSE),\n                                            Total_number = .N\n                                            \n                    ), by=\"ME_clusters\"  ]\n\n\nME_cluster_db[, `:=`(Novel_VastDB=Novel_VastDB-Novel_both,\n                     Novel_GENCODE=Novel_GENCODE-Novel_both\n                     )]\n\n\nME_cluster_db[, `:=`(Annotated = Total_number - Novel_VastDB - Novel_GENCODE - Novel_both\n                     )]\n\nME_cluster_db_melted <- melt(ME_cluster_db[, c(\"ME_clusters\", \"Novel_VastDB\", \"Novel_GENCODE\", \"Novel_both\", \"Annotated\")])\n\n\ncolnames( ME_cluster_db_melted) <- c(\"ME_clusters\", \"Microexon\", \"Count\")\n\nME_cluster_db_melted$Microexon <- factor( ME_cluster_db_melted$Microexon, levels=c(\"Novel_both\",  \"Novel_VastDB\", \"Novel_GENCODE\",  \"Annotated\"))\n\nME_cluster_db_melted$ME_clusters <- factor(ME_cluster_db_melted$ME_clusters,\n                                  levels = c(\"I1\", \"I2\", \"I3\", \"I4\", \"E1\", \"E2\", \"E3\",  \"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"M1\", \"NM1\", \"NM2\", \"NM3\", \"NN1\", \"NN2\"))\n\n\nggplot(ME_cluster_db_melted) +\n  xlab(\"Microexon Cluster\") +\n  ylab(\"Percentage\") +\n  geom_bar( aes(x = ME_clusters, y= Count, fill=Microexon), stat=\"identity\", position=\"fill\") +\n  theme(axis.text.x = element_text(angle = 45))\n\n```\n\n```{r}\nME_cluster_db_melted[ ,sum(Count) , by=Microexon]\n```\n\n```{r}\n\nME_cluster_db_melted[ ,sum(Count)]\n\n```\n\n\n```{r}\n\nME_cluster_db_melted\n\n```\n\n```{r}\n\nME_cluster_db_melted[ Microexon==\"Novel_GENCODE\" |Microexon==\"Novel_both\"  ,sum(Count) , by=ME_clusters]\n\n```\n\n```{r}\nME_cluster_db_melted[ Microexon==\"Novel_GENCODE\" |Microexon==\"Novel_both\"  ,sum(Count) ]\n```\n\n\n```{r}\n776 / 1066\n161 / 1066\n\n(776 + 161) / 1066\n\n70/265\n\n93/1066\n\n93/374\n\n41/93\n\n75/374\n\n(52)/374\n\n```\n\n\n```{r}\nME_cluster_db_melted[  ME_clusters %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"M1\", \"MM1\", \"NM2\", \"NM3\", \"NN1\", \"NN2\")   ,sum(Count)]\n```\n\n\n```{r}\n\n\nME_cluster_db_melted[ (Microexon==\"Novel_both\"   ) &   ME_clusters %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"M1\", \"MM1\", \"NM2\", \"NM3\", \"NN1\", \"NN2\")   ,sum(Count)]\n\n```\n\n\n```{r}\n\nME_cluster_db_melted[ (Microexon==\"Novel_both\" | Microexon==\"Novel_VastDB\" ) &   ME_clusters %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"M1\", \"MM1\", \"NM2\", \"NM3\", \"NN1\", \"NN2\")   ,sum(Count)]\n\n```\n\n\n\n```{r}\n\nlibrary(biomaRt)\nlibrary(\"stringr\")\n\n\nME_cluster_db\n\nVASTDB_EVENTS_Mmu139_mm10 <- data.table(read_delim(\"~/Google_Drive/Results/ME/mm10/VASTDB_EVENTS_Mmu139_mm10.tab\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\n\n\n\n#write.table(ME_cluster_transcript$transcript\n\n\n#ME_cluster_transcript <- merge(ME_clusters, ME_final[, c(\"ME\", \"transcript\")], #by=\"ME\")\n#ME_cluster_transcript <- data.table(ME_cluster_transcript)\n\nME_cluster_transcript$ME_clusters <- mapvalues(ME_cluster_transcript$ME_clusters, \n          from =c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15, 1, 2, 11, 17),\n          to = c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", \"M1\", \"E1\", \"NN1\", \"NN2\", \"NN3\", \"C1\", \"C2\", \"E2\", \"C3\"))\n\n\n\nneuronal_ME_cluster_transcript <- ME_cluster_transcript[ME_clusters %in% c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", \"NN1\") , ]\n\n\nneuronal_ME_cluster_transcript[ , tstrsplit(transcript, \".\", fixed=TRUE)]\n\n\nneuronal_ME_clster_transcripts <- sapply(strsplit(as.character(neuronal_ME_cluster_transcript$transcript), \"[.]\"), `[`, 1)\n\n\nwrite(gene_table$mgi_symbol, file = \"../ME.transcripts.STRING.txt\", sep = \"\\n\")\n\n\n\nstr_split_fixed(neuronal_ME_cluster_transcript$transcript, \"[.]\", 1)\n\nstr_split( as.character(neuronal_ME_cluster_transcript$transcript), sep=\".\")\n\nsapply( neuronal_ME_cluster_transcript$transcript, \".\", 1 )\n\nstrsplit(as.character(neuronal_ME_cluster_transcript$transcript), '.' )\n\nensembl = useEnsembl(biomart=\"ensembl\", dataset=\"mmusculus_gene_ensembl\")\n\ngene_table <- data.table(getBM(attributes=c('ensembl_gene_id_version', \"mgi_symbol\"),filters = 'ensembl_transcript_id_version', values = neuronal_ME_cluster_transcript$transcript , mart = ensembl))\n\n\ntotal_gene_table <- data.table(getBM(attributes=c(\"ensembl_transcript_id_version\", \"ensembl_transcript_id\", \"mgi_symbol\"),filters = 'ensembl_transcript_id_version', values = ME_final$transcript , mart = ensembl))\n\n\ngene_table[ensembl_transcript_id==\"ENSMUST00000186346\", ]\n\n\ngene_table[mgi_symbol==\"Ptk2\",]\n\n\nME_cluster_transcript[transcript==\"ENSMUST00000057330.14\",]\n\nENSMUST00000057330.14\n```\n\n\n\n```{r}\nmetadata[Biosample.term.name==\"whole cortex\", Biosample.Age]\n\n\n\n\n\n\nmetadata[Biosample.Age==\"E14.5\", Biosample.Age:=\"14.5 day\"]\nmetadata[Biosample.Age==\"E16.5\", Biosample.Age:=\"16.5 day\"]\n\n\nmetadata[Biosample.Age==\"P0a\", Biosample.Age:=\"0 day\"]\nmetadata[Biosample.Age==\"P0b\", Biosample.Age:=\"0 day\"]\nmetadata[Biosample.Age==\"P4a\", Biosample.Age:=\"P4 day\"]\nmetadata[Biosample.Age==\"P4b\", Biosample.Age:=\"P4 day\"]\n\nmetadata[Biosample.Age==\"P7a\", Biosample.Age:=\"P7 day\"]\nmetadata[Biosample.Age==\"P7b\", Biosample.Age:=\"P7 day\"]\nmetadata[Biosample.Age==\"P15a\", Biosample.Age:=\"P15 day\"]\nmetadata[Biosample.Age==\"P15b\", Biosample.Age:=\"P15 day\"]\n\nmetadata[Biosample.Age==\"P30a\", Biosample.Age:=\"P30 day\"]\nmetadata[Biosample.Age==\"P30b\", Biosample.Age:=\"P30 day\"]\nmetadata[Biosample.Age==\"P110a\", Biosample.Age:=\"P110 day\"]\nmetadata[Biosample.Age==\"P110b\", Biosample.Age:=\"P110 day\"]\n\nmetadata[Biosample.Age==\"21Ma\", Biosample.Age:=\"21 Months\"]\nmetadata[Biosample.Age==\"21Mb\", Biosample.Age:=\"21 Months\"]\n\n\n\n\n```\n\n\n```{r, fig.height= 10, fig.width= 5}\n\n\n\nME_clusters_PSI_cortex <- merge(ME_clusters_PSI, metadata[Biosample.term.name==\"whole cortex\", ], by.x=\"FILE_NAME\", by.y=\"File.accession\")\n\n\n\nME_clusters_PSI_cortex_aggregated <-  ME_clusters_PSI_cortex[, .(PSI=mean(PSI, na.rm = TRUE)), by=c(\"ME\", \"ME_clusters\",  \"Biosample.Age\") ]\n\n\n\nSub_ME_clusters_PSI_cortex_aggregated <- ME_clusters_PSI_cortex_aggregated[ ME_clusters %in% c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15), ]\n\nSub_ME_clusters_PSI_cortex_aggregated$ME_clusters <- factor(Sub_ME_clusters_PSI_cortex_aggregated$ME_clusters, levels = c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15))\n\n\nSub_ME_clusters_PSI_cortex_aggregated$ME_clusters <- mapvalues(Sub_ME_clusters_PSI_cortex_aggregated$ME_clusters, \n          from =c(12, 3, 7, 5, 8, 13, 6, 14, 10, 9 , 4, 18, 16, 15),\n          to = c(\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", \"M1\", \"E1\", \"NN1\", \"NN2\", \"NN3\"))\n\n\n\nSub_ME_clusters_PSI_cortex_aggregated$Biosample.Age <- factor(Sub_ME_clusters_PSI_cortex_aggregated$Biosample.Age, levels = c(\"14.5 day\",\n                                                                                                      \"16.5 day\", \n                                                                                                      \"0 day\",\n                                                                                                      \"P4 day\",\n                                                                                                      \"P7 day\",\n                                                                                                      \"P15 day\",\n                                                                                                      \"P30 day\",\n                                                                                                      \"P110 day\",\n                                                                                                      \"21 Months\"\n                                                                                                       ))\n\n\n\n\nSub_ME_clusters_PSI_cortex_aggregated_mean <- Sub_ME_clusters_PSI_cortex_aggregated[, .(PSI = mean(PSI, na.rm = TRUE)), by = c(\"ME_clusters\", \"Biosample.Age\") ]\n\n\n\nggplot( ) +\n        geom_line(data= Sub_ME_clusters_PSI_cortex_aggregated, aes(factor(Biosample.Age), PSI, group=ME), colour=\"grey\") +\n        geom_line(data = Sub_ME_clusters_PSI_cortex_aggregated_mean, aes(factor(Biosample.Age), PSI, group=ME_clusters),  colour=\"red\" ) +\n        facet_grid( ME_clusters ~ .) +\n        xlab(\"Develomental stage\") +\n        theme(panel.background = element_rect(fill = 'white', colour = 'black'), axis.text.x = element_text(angle = 90, hjust=1))\n\n\n```\n\n\n\n\n```{r}\n\nget_colors_continuos <- function(variable, breaks, colours  ){\n  \n  rbPal <- colorRampPalette(colours)\n\n  color <- rbPal(breaks)[as.numeric(cut(variable,breaks = breaks))]\n  \n\n  return(color)\n}\n\n\nplot_PCA_PSI <- function(comp, sub_ME_Tissues_clusters_PSI_aggregated_PCA, cluster_number, Tissue_clusters_NO_NA){\n\n\n  PSI_col = sub_ME_Tissues_clusters_PSI_aggregated_PCA[ ME_clusters==cluster_number, PSI]\n  names(PSI_col) <- sub_ME_Tissues_clusters_PSI_aggregated_PCA[ ME_clusters==cluster_number, FILE_NAME]\n\n  \n  my_col_PSI <- get_colors_continuos(PSI_col[rownames(comp)], 10,  c(\"grey40\", \"grey50\", \"grey60\", \"gold\",   \"orange\", \"red\"))\n  \n  plot(comp, pch=16, col=\"white\" ) +\n  text( comp , labels=Tissue_clusters_NO_NA$cluster, col=my_col_PSI) +\n  title( paste(\"Cluster\", cluster_number, sep= \" \") )\n\n}\n```\n\n\n\n\n\n```{r}\n\nME_Tissues_clusters_PSI_aggregated_PCA <- ME_Tissues_clusters_PSI[, list(PSI=mean(PSI, na.rm = TRUE)), by=list( ME_clusters,  FILE_NAME) ]\n\ncomp <- data.frame(pc$x[,c(1,2)])\n\nfor (i in c(\"I1\", \"I2\", \"I3\", \"I4\", \"E1\", \"E2\", \"E3\",  \"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"M1\", \"NM1\", \"NM2\", \"NM3\", \"NN1\", \"NN2\")) {\n\nplot_PCA_PSI(comp, ME_Tissues_clusters_PSI_aggregated_PCA, i, Tissue_clusters_NO_NA)\n  \n}\n\n\n\n\n\n```\n\n\n\n```{r}\n\n\nplot_PCA_PSI(comp, ME_Tissues_clusters_PSI_aggregated_brain_PCA, 5, Tissue_clusters_NO_NA)\n```\n\n\n\n```{r}\n\n\n\"NM1\", \"N1\", \"NM2\", \"N2\", \"NM3\", \"N3\", \"NM4\", \"N4\", \"N5\", \"N6\"\n\n11, 5, 9, 7, 8, 12, 13, 10, 18\n\n\nME_clusters_table <- data.table(ME_clusters)\n\nME_clusters_table[ME_clusters %in% c(11, 5, 9, 7, 8, 12, 13, 10, 18), ]\n\n\nME_clusters_table[ME==\"chr17_-_56421832_56421844\", ]\n\n.\ntable(ME_clusters_table$ME_clusters)\n\n\nME_clusters_table[ME==\"chr4_-_56922386_56922410\", ]\n\nchr4_-_56922386_56922410\n\n```\n\n\n\n```{r}\n ME_final[, transcript:=sub(\"[.].*\", \"\", transcript) ]\n```\n\n\n\n```{r}\nlibrary(biomaRt)\n\n\n\nensembl_mm = useEnsembl(biomart=\"ensembl\", dataset=\"mmusculus_gene_ensembl\")\n\nneuronal_clusters <- ME_clusters_table[ME_clusters %in% c(11, 5, 9, 7, 8, 12, 13, 10, 18), ]\n\nneuronal_clusters <- merge(neuronal_clusters, ME_final[, c(\"ME\", \"transcript\")], by=\"ME\")\n\n\n\ngene_info_total <- data.table(getBM(attributes=c('ensembl_gene_id','ensembl_transcript_id', 'entrezgene', \"wikigene_description\", \"mgi_symbol\"),filters = 'ensembl_transcript_id', values = ME_final[, transcript] , mart = ensembl_mm))\n\n\ngene_info <- data.table(getBM(attributes=c('ensembl_gene_id','ensembl_transcript_id', 'entrezgene', \"wikigene_description\", \"mgi_symbol\"),filters = 'ensembl_transcript_id', values = neuronal_clusters[, transcript] , mart = ensembl_mm))\n\ngene_info[mgi_symbol == \"Mapt\", ]\n\n\ngene_info_total[mgi_symbol == \"Mapt\",]\n\n\nwrite.table(gene_info[,mgi_symbol ])\n\n\nwrite.table(gene_info[,mgi_symbol ], file = \"../../Paper/neuronal.genes.PPI.txt\", append = FALSE, quote = FALSE, sep = \" \",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = FALSE,\n            col.names = FALSE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n\n\n data.table(getBM(attributes=c('ensembl_gene_id','ensembl_transcript_id', 'entrezgene', \"wikigene_description\", \"mgi_symbol\"),filters = 'ensembl_transcript_id', values = \"ENSMUST00000110036\", mart = ensembl_mm))\n\n \n\nME_final[ transcript==\"ENSMUST00000106992\",]\n \"ENSMUST00000106992\"\n\n\n```\n\n\n\n\n\n\n\n```{r}\n\n\n\nneuronal_clusters_genes <- merge(neuronal_clusters, gene_info, by.x=\"transcript\", by.y=\"ensembl_transcript_id\")\n\nneuronal_clusters_genes$ME_clusters <- mapvalues(neuronal_clusters_genes$ME_clusters, \n          from =1:18,\n          to = c(\"I1\", \"E1\", \"E3\", \"I2\", \"N1\", \"M1\", \"N2\", \"NM3\", \"NM2\", \"N5\", \"NM1\", \"N3\", \"N4\", \"NN2\", \"E2\", \"I4\", \"I3\", \"NN1\"))\n\n\n\n#Generaring values for pie vertics\n\ncolour_pallete <- list( c(heat.colors(8), \"#1E90FFFF\"))\nvalues_clusters = list()\n\nME_per_gene = list()\n\nvertex_shape = list()\ncircle_color = list()\n\nlabel_color = list()\n\nfor (i in 1:144){\n  \n\n  gene_name = nodes[i, ]$id\n\n\n  if (i==16){\n    \n    gene_name = \"Sptan1\"   # STRING DB changed the name from Spna2 to Spatan1\n  }\n  \n  if (i==49){\n    \n    gene_name = \"Diaph1\"   ## STRING DB changed the name from Diap1 to Diaph1\n  }\n  \n  \n  ME_per_gene[[i]] <- nrow(neuronal_clusters_genes[mgi_symbol==gene_name, ])\n\n\n  N1 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N1\", ])\n  N2 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N2\", ])\n  N3 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N3\", ])\n  N4 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N4\", ])\n  N5 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"N5\", ])\n  NM1 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NM1\", ])\n  NM2 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NM2\", ])\n  NM3 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NM3\", ])\n  NN1 =  nrow(neuronal_clusters_genes[mgi_symbol==gene_name  & ME_clusters==\"NN1\", ])\n  \n  \n  #values_clusters[[i]] <- c(N1, N2, N3, N4, N5, NM1, NM2, NM3, NN1)\n  \n  cluster_counts <- c(NM1, N1, NM2,  N2, NM3, N3, N4, N5,  NN1)\n  \n  values_clusters[[i]] <- cluster_counts\n  \n  if (length(which(cluster_counts!=0) ) == 1  ) {\n    \n    vertex_shape[[i]] <- \"circle\"   #Nodes with only one kind of cluster need to be circles instead of pie to avoid pie border\n    circle_color[[i]] <-  colour_pallete[[1]][which(cluster_counts!=0)] \n    \n    \n  } else {\n    \n    \n    vertex_shape[[i]] <- \"pie\"\n    circle_color[[i]] <-  \"#FFFF00FF\"   #This colour is not taken in consideration for pies\n    \n    \n  }\n  \n  \n  #if (gene_name %in%  SFARI_Gene_animal_genes[model.species==\"Mus musculus\" , gene.symbol]) {\n    \n  if (gene_name %in%  SFARI_Gene_human_genes[ gene.score<=3 , gene.symbol]) {  \n    \n    \n    \n    label_color[[i]] <- \"darkgreen\"\n    \n    \n  } else{\n    \n     label_color[[i]] <- \"black\"\n    \n  }\n  \n    \n    \n  if ( sum( c( N1, N2, N3, N4, N5, NM1, NM2, NM3, NN1)) == 0 ) {\n    \n    print( c(i, nodes[i, ]$id ) )\n  }\n  \n\n}\n\n\n\n```\n\n\n\n\n\n```{r, fig.height=20, fig.width=20}\n\n\nvertex.pie.color=list(heat.colors(9))\n\n\nlibrary(igraph)\n\nME_PPI <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/ME.PPI.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\n\n\nlinks <- ME_PPI[, c(\"#node1\", \"node2\", \"combined_score\")]\n\n\n\ncolnames(links) <- c(\"from\", \"to\", \"score\")\n\nnodes.1 <- ME_PPI[, c(\"#node1\")]\ncolnames(nodes.1) <- c(\"id\")\n\nnodes.2 <- ME_PPI[, c(\"node2\")]\ncolnames(nodes.2) <- c(\"id\")\n\n\nnodes <- rbind(nodes.1, nodes.2)\n\n\nnodes <- unique(  nodes[ , , by=\"id\"] )\n\n\n\nnet <- graph_from_data_frame(d=links, vertices=nodes, directed=F)\n\nE(net)$size <- log(2-  E(net)$score)\n\nE(net)$width <- (1-  E(net)$score)  * 10\n\n\n\n\nV(net)$size <- log(unlist(ME_per_gene) + 2) * 4\n\nE(net)$score\n\nplot(net, vertex.shape= unlist(vertex_shape), vertex.color = unlist(circle_color)  , vertex.pie=values_clusters, rescale=T, pie.lty=2, vertex.pie.color=colour_pallete, vertex.label.font=2, vertex.label.dist=0.4, vertex.label.color=unlist(label_color), vertex.label.cex=1.2)\n\ncolour_pallete\n\n\n```\n\n```{r}\n\nlinks[, .N , by=\"from\"]\nlinks[, .N , by=\"to\"]\n\n\nedge_count <- table(c(links$to, links$from))\n\n\nedge_count <- data.table(cbind(edge_count, names(edge_count)))\n\n\ncolnames(edge_count) <- c(\"count\", \"gene\")\n\n\nedge_count$count <- as.numeric(edge_count$count)\n\nedge_count[order(-count)]\n\n\nggplot(edge_count) +\n  geom_histogram(aes(count))\n\n\nedge_count[ gene==\"Diap1\", ]\n\nedge_count\n\nedge_count[count >= 10, gene]\n```\n\n\n```{r}\n graph_from_data_frame(links, directed = F, vertices = NULL)\n```\n\n\n\n```{r}\nPPI_betweenness <- estimate_betweenness(net, vids = V(net), directed = F, cutoff=-1,\n  weights = NULL, nobigint = TRUE)\n\nPPI_eigen_centrality <- eigen_centrality(net, directed = F, scale = T, weights = NULL)$vector\n\n\ncbind(as.numeric(PPI_betweenness[V(net)]), as.numeric( PPI_eigen_centrality[V(net)]  ) )\n\n\nPPI_centrality <- data.frame(cbind(  PPI_betweenness[V(net)] ,  PPI_eigen_centrality[V(net)]   ))\n\ncolnames(PPI_centrality) <- c(\"betweenness\", \"eigen_centrality\")\n\nPPI_centrality$mgi_symbol <-  row.names(PPI_centrality)\n\nPPI_centrality <- data.table(PPI_centrality)\n\nPPI_centrality[order(-betweenness)]\n\n```\n\n```{r}\nPPI_centrality[order(-eigen_centrality)]\n```\n\n\n```{r}\n\nPPI_centrality\n\n```\n\n\n\n```{r}\n\nlibrary(Hmisc)\n\n\nSFARI_Gene_animal_genes<- data.table(read_csv(\"~/Google_Drive/Results/ME/Paper/PPI/SFARI-Gene_animal-genes_export10-09-2018.csv\"))\ncolnames(SFARI_Gene_animal_genes) = gsub(\"-\",\".\",colnames(SFARI_Gene_animal_genes))\n\n\nSFARI_Gene_animal_genes[ , gene.symbol:= paste0(substr(gene.symbol, 1, 1), tolower(substr(gene.symbol, 2, nchar(gene.symbol))))  ]\n\nlength(unique( neuronal_clusters_genes[mgi_symbol %in% SFARI_Gene_animal_genes[model.species==\"Mus musculus\" , gene.symbol], ]$mgi_symbol))\n\n\nSFARI_Gene_animal_genes[model.species==\"Mus musculus\" , ]\n\n\n\nSFARI_Gene_human_genes <- data.table(read_csv(\"~/Google_Drive/Results/ME/Paper/PPI/SFARI-Gene_genes_human.csv\")) \n\ncolnames(SFARI_Gene_human_genes) = gsub(\"-\",\".\",colnames(SFARI_Gene_human_genes))\n\nSFARI_Gene_human_genes[ , gene.symbol:= paste0(substr(gene.symbol, 1, 1), tolower(substr(gene.symbol, 2, nchar(gene.symbol))))  ]\n\n\nneuronal_clusters_genes[mgi_symbol %in% SFARI_Gene_human_genes[ gene.score<=3 , gene.symbol], ]\n\n```\n\n\n\n\n\n\n\n```{r}\nSFARI_Gene_animal_genes[model.species==\"Mus musculus\",]\n\nSFARI_Gene_human_genes[gene.score<=3,]\n\n```\n\n\n```{r}\nlength(unique(neuronal_clusters_genes$mgi_symbol))\n```\n\n```{r}\n\nlength(unique(neuronal_clusters_genes[mgi_symbol %in% SFARI_Gene_human_genes[ gene.score<=3 , gene.symbol], ]$mgi_symbol))\n\n```\n\n\n```{r}\n\nlength(unique(SFARI_Gene_human_genes[ gene.score<=3 , gene.symbol]))\n\n```\n\n\n\n\n#### whippet\n\n```{r}\nlibrary(readr)\nlibrary(data.table)\nTOTAL_diff_exons <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/Whippet_Delta/TOTAL.diff.exon_ID.only_ME\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\n\nTOTAL_diff_exons.ME <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/Whippet_Delta/TOTAL.ME.diff.exon_ID.only_ME\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n```\n\n```{r}\nME_3_alt <- unique( ME_cov_filtered[is_alternative_3==\"True\", ME] )\nME_5_alt <- unique( ME_cov_filtered[is_alternative_5==\"True\", ME] )\n\nME_5_3_alt <- unique( ME_cov_filtered[is_alternative_5==\"True\" | is_alternative_3==\"True\" , ME] )\n\n\n\n```\n\n\n\n\n\n\n```{r}\nlibrary(ggplot2)\ncompare_whippet_MicroExonator <- merge(TOTAL_diff_exons.ME, TOTAL_diff_exons, by=c(\"ME_cluster\", \"Tissue_cluster\", \"exon_ID\"))\n\ncompare_whippet_MicroExonator[ , Diff.x:=(Probability.x>= 0.9 & abs(DeltaPsi.x) >=0.1) ]\ncompare_whippet_MicroExonator[ , Diff.y:=(Probability.y>= 0.9 & abs(DeltaPsi.y) >=0.1) ]\n\ncompare_whippet_MicroExonator[Diff.x==TRUE & Diff.y==TRUE, Diff:=\"Both\"]\ncompare_whippet_MicroExonator[Diff.x==TRUE & Diff.y==FALSE, Diff:=\"MicroExonator\"]\ncompare_whippet_MicroExonator[Diff.x==FALSE & Diff.y==TRUE, Diff:=\"Whippet\"]\n\nggplot(compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2, ]) +\n  geom_point(aes(x=-DeltaPsi.x, y=-DeltaPsi.y,  colour=Diff ), alpha=0.5 ) +\n  facet_grid( exon_ID %in% ME_5_3_alt ~ .)\n\n\n\n```\n\n```{r}\ntable(compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2, Diff ])\n```\n\n\n```{r}\ncompare_whippet_MicroExonator[ , Delta.delta:=DeltaPsi.x-DeltaPsi.y]\n\nggplot(compare_whippet_MicroExonator) +\n  geom_histogram(aes(x=Delta.delta))\n\n```\n\n\n\n```{r}\n\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & Diff==\"MicroExonator\", ]\n\n```\n\n\n```{r}\n\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & Diff==\"MicroExonator\", c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\")]\n\n```\n\n\n```{r}\nmicroexonator_only <-  compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & Diff==\"MicroExonator\" & exon_ID %in% ME_5_3_alt , c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\") ]\n\nmicroexonator_only[order( -abs((Psi_B.x-Psi_A.x)-(Psi_B.y-Psi_A.y )) ) ]\n```\n\n\n```{r}\nwhippet_only <-  compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & Diff==\"Whippet\" & exon_ID %in% ME_5_3_alt , c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\") ]\n\nwhippet_only[order( -abs((Psi_B.x-Psi_A.x)-(Psi_B.y-Psi_A.y )) ) ]\n```\n\n\n```{r}\nwhippet_errors <- compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & Diff==\"Whippet\" & exon_ID %in% ME_5_3_alt , c(\"exon_ID\") ]\n```\n\n\n\n\n```{r}\n\nTOTAL_diff_exons <- data.table(TOTAL_diff_exons)\n\nTOTAL_diff_exons_sig <-  TOTAL_diff_exons[  Probability>= 0.9 & abs(DeltaPsi) >=0.1,  ]\n\n\n\n```\n\n\n```{r}\n\nTOTAL_diff_exons_ME_cluster_info <-  merge(TOTAL_diff_exons_sig, ME_cluster_info, by.x=\"exon_ID\", by.y=\"ME\")\nTOTAL_diff_exons_ME_cluster_info_same_cluster <- TOTAL_diff_exons_ME_cluster_info[ME_cluster==ME_clusters,]\n\n\nTOTAL_quant_exons_ME_cluster_info <-  merge(TOTAL_diff_exons, ME_cluster_info, by.x=\"exon_ID\", by.y=\"ME\")\nTOTAL_quant_exons_ME_cluster_info_same_cluster <- TOTAL_quant_exons_ME_cluster_info[ME_cluster==ME_clusters,]\n\nTOTAL_quant_exons_ME_cluster_info_same_cluster_stats <- TOTAL_quant_exons_ME_cluster_info_same_cluster[ , .(Quant_ME_Cluster= .N) ,  by=c(\"ME_cluster\", \"Tissue_cluster\")]\n\n\nTOTAL_diff_exons_ME_cluster_info_same_cluster_stats <- TOTAL_diff_exons_ME_cluster_info_same_cluster[ , .(Diff_ME_Cluster= .N) ,  by=c(\"ME_cluster\", \"Tissue_cluster\")]\n\n\n\nME_cluster_diff_stats <- merge(TOTAL_diff_exons_ME_cluster_info_same_cluster_stats, TOTAL_quant_exons_ME_cluster_info_same_cluster_stats,  by=c(\"ME_cluster\", \"Tissue_cluster\"))\n\n\n\nME_cluster_diff_stats <- merge(ME_cluster_diff_stats, ME_cluster_info[ , .(TOTAL_ME_Cluster=.N ) ,  by=c(\"ME_clusters\")], by.x=\"ME_cluster\", by.y=\"ME_clusters\")\n\n\n\n\n\n\n\n\n\nN_TOTAL_exons <- TOTAL_diff_exons[, .(TOTAL_exons=.N), by=\"ME_cluster\"]\nN_TOTAL_diff_exons <- TOTAL_diff_exons[  Probability>= 0.9 & abs(DeltaPsi) >=0.1, .(TOTAL_diff_exons=.N), by=\"ME_cluster\"]\n\n\n\nME_cluster_diff_stats <- merge(merge(ME_cluster_diff_stats, N_TOTAL_exons, by=\"ME_cluster\"), N_TOTAL_diff_exons, by=\"ME_cluster\")\n\n\nTOTAL_diff_exons_ME_cluster_info_same_cluster_stats[ , ME_cluster_diff_percent:=((100* Diff_ME_Cluster)/ TOTAL_ME_Cluster) ]\n\n\n\nME_cluster_diff_stats[, paste(ME_cluster, Tissue_cluster, sep=\"_\")]\n\ndim(ME_cluster_diff_stats)\n\n```\n\n```{r}\n\nME_cluster_diff_stats_sub <- ME_cluster_diff_stats[ME_cluster==\"NN1\" & Tissue_cluster==2, ]\n\n\nTOTAL_DIFF <-  ME_cluster_diff_stats_sub$TOTAL_diff_exons\nTOTAL_NOT_DIFF <- ME_cluster_diff_stats_sub$TOTAL_exons -   ME_cluster_diff_stats_sub$TOTAL_diff_exons\n\nME_DIFF <- ME_cluster_diff_stats_sub$Diff_ME_Cluster\nME_NOT_DIFF <- ME_cluster_diff_stats_sub$Quant_ME_Cluster - ME_cluster_diff_stats_sub$Diff_ME_Cluster\n\n\n\nchisq.test(cbind(c(TOTAL_NOT_DIFF, TOTAL_DIFF), c(ME_NOT_DIFF, ME_DIFF)))\n\n\n\n\n```\n\n\n```{r}\n5.712e-05 <= (0.05/78)\n```\n\n\n\n\n```{r}\n\nTOTAL_diff_exons_ME_cluster_info_same_cluster\n\n\nTOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==6, ]\n\n\nTOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==4, ]\n\n\nTOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==13, ]\n\n\n\nTOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==2, ]\n\n\n```\n\n\n## Adrenal ##\n\n```{r}\n\nME_genes <- merge(ME_final[, c(\"ME\", \"transcript\")], unique(gene_info_total[, c(\"ensembl_transcript_id\", \"ensembl_gene_id\", \"mgi_symbol\")]) , by.x=\"transcript\", by.y=\"ensembl_transcript_id\")\n\n\nAdrenal_both <- compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==6 & Diff==\"Both\"  & abs(Delta.delta)<=0.25,]$exon_ID\n  <- rbind( TOTAL_diff_exons_ME_cluster_info_same_cluster[Tissue_cluster==6, ], TOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==6  & exon_ID %in% Adrenal_both, ] )\nAdrenal_ME <- Adrenal_ME[ , .(ME_cluster=ME_clusters, max_DeltaPsi= max(abs(DeltaPsi)) * ((DeltaPsi>0)-0.5) * 2  , max_Entropy= max(Entropy)) , by=exon_ID]\nAdrenal_ME <- unique(Adrenal_ME)\nAdrenal_ME <- merge( Adrenal_ME, ME_genes, by.x=\"exon_ID\", by.y=\"ME\")\n\n\nHeart_both <- compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==4 & Diff==\"Both\" & abs(Delta.delta)<=0.25  ,]$exon_ID\nHeart_ME <- rbind( TOTAL_diff_exons_ME_cluster_info_same_cluster[Tissue_cluster==4, ], TOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==4  & exon_ID %in% Heart_both, ] )\nHeart_ME <- Heart_ME[ , .(ME_cluster=ME_clusters, max_DeltaPsi= max(abs(DeltaPsi)) * ((DeltaPsi>0)-0.5) * 2  , max_Entropy= max(Entropy)) , by=exon_ID]\nHeart_ME <- unique(Heart_ME)\nHeart_ME <- merge( Heart_ME, ME_genes, by.x=\"exon_ID\", by.y=\"ME\")\n\nSKM_both <- compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==13 & Diff==\"Both\" & abs(Delta.delta)<=0.25  ,]$exon_ID\nSKM_ME <- rbind( TOTAL_diff_exons_ME_cluster_info_same_cluster[Tissue_cluster==13, ], TOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==13 & exon_ID %in% SKM_both, ] )\nSKM_ME <- SKM_ME[ , .(ME_cluster=ME_clusters, max_DeltaPsi= max(abs(DeltaPsi)) * ((DeltaPsi>0)-0.5) * 2  , max_Entropy= max(Entropy)) , by=exon_ID]\nSKM_ME <- unique(SKM_ME)\nSKM_ME <- merge( SKM_ME, ME_genes, by.x=\"exon_ID\", by.y=\"ME\")\n\n\n\n\nBrain_both <- compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & Diff==\"Both\"  & abs(Delta.delta)<=0.25 ,]$exon_ID\nBrain_ME <- rbind( TOTAL_diff_exons_ME_cluster_info_same_cluster[Tissue_cluster %in% c(10, 9, 3, 8, 11, 2) ], TOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==2  & exon_ID %in% Brain_both, ] )\nBrain_ME <- Brain_ME[ , .(ME_cluster=ME_clusters, max_DeltaPsi= max(abs(DeltaPsi)) * ((DeltaPsi>0)-0.5) * 2  , max_Entropy= max(Entropy)) , by=exon_ID]\nBrain_ME <- unique(Brain_ME)\nBrain_ME <- merge( Brain_ME, ME_genes, by.x=\"exon_ID\", by.y=\"ME\")\n\n\n```\n\n\n```{r}\nTotal rbind(Adrenal_ME, Muscle_ME, Heart_ME, Brain_ME)\n```\n\n\n\n```{r}\n\nAdrenal_ME[ , Tissue:=\"Adrenal\"]\nHeart_ME[ , Tissue:=\"Heart\" ]\nSKM_ME[ , Tissue:=\"SKM\" ]\nBrain_ME[ , Tissue:=\"Brain\" ]\n\nTOTAL_DIFF_ME <- rbind(Adrenal_ME, Heart_ME, SKM_ME, Brain_ME)\n\nTOTAL_DIFF_ME[ ME_cluster %in% c(\"I1\", \"I2\", \"I3\", \"I4\") , ME_cluster_class:=\"Included\"]\nTOTAL_DIFF_ME[ ME_cluster %in% c(\"E1\", \"E2\", \"E3\") , ME_cluster_class:=\"Excluded\"]\nTOTAL_DIFF_ME[ ME_cluster %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\") , ME_cluster_class:=\"Neuronal\"]\nTOTAL_DIFF_ME[ ME_cluster %in% c(\"NM1\", \"NM2\", \"NM3\") , ME_cluster_class:=\"Neuromuscular\"]\nTOTAL_DIFF_ME[ ME_cluster %in% c(\"M1\") , ME_cluster_class:=\"Muscular\"]\nTOTAL_DIFF_ME[ ME_cluster %in% c(\"NN1\", \"NN2\") , ME_cluster_class:=\"Non-neuronal\"]\n\nggplot(TOTAL_DIFF_ME) +\n  geom_bar( aes(x=Tissue, fill=ME_cluster_class), stat=\"count\" ) +\n  theme_bw()\n\n\n```\n\n\n\n\n\n```{r}\n  TOTAL_DIFF_ME[exon_ID %in% microexons_GENCODE |  exon_ID %in% microexons_Vastdb  , type:=\"Annotated\" ]\n  TOTAL_DIFF_ME[ !exon_ID %in% microexons_GENCODE  , type:=\"Novel in Genecode\" ]\n  TOTAL_DIFF_ME[ !exon_ID %in% microexons_Vastdb  , type:=\"Novel in VastDB\" ]\n  TOTAL_DIFF_ME[!exon_ID %in% microexons_GENCODE &  !exon_ID %in% microexons_Vastdb  , type:=\"Novel in both\" ]\n  \n  \nggplot(TOTAL_DIFF_ME) +\n  geom_bar( aes(x=Tissue, fill=type), stat=\"count\", position=\"fill\" ) +\n  theme_bw()\n\n\n  \n```\n\n```{r}\n\nexon <- as.character(unique(TOTAL_DIFF_ME$exon_ID))\n\ncat(as.character(unique(TOTAL_DIFF_ME$mgi_symbol)), sep=', ') \n```\n\n\n```{r}\nTOTAL_DIFF_ME[Tissue==\"SKM\" & ( type==\"Novel in both\" | type==\"Novel in Genecode\" ), ]\n\n```\n\n\n\n\n\n```{r}\n\n\nwrite.table(TOTAL_DIFF_ME, file = \"../../Paper/New_report/Alternative_microexons.txt\", append = FALSE, quote = F, sep = \"\\t\",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n\nTOTAL_DIFF_ME\n\n\n```\n\n\n```{r}\nAdrenal_ME[ !exon_ID %in% microexons_Vastdb, ]\nHeart_ME[ !exon_ID %in% microexons_Vastdb, ]\nSKM_ME[ !exon_ID %in% microexons_Vastdb, ]\nBrain_ME[ !exon_ID %in% microexons_Vastdb, ]\n\nrbin\n```\n\n\n\n```{r}\n\n\n\nlibrary(limma)\n\nTOTAL_ME <- ME_cluster_info[ , c(\"ME\", \"ME_clusters\")]\n\nTOTAL_ME[ , Adrenal:=FALSE]\nTOTAL_ME[ ME %in% Adrenal_ME$exon_ID ,  Adrenal:=TRUE]\n\nTOTAL_ME[ , Heart:=FALSE]\nTOTAL_ME[ ME %in% Heart_ME$exon_ID ,  Heart:=TRUE]\n\nTOTAL_ME[ , SKM:=FALSE]\nTOTAL_ME[ ME %in% SKM_ME$exon_ID ,  SKM:=TRUE]\n\nTOTAL_ME[ , Brain:=FALSE]\nTOTAL_ME[ ME %in% Brain_ME$exon_ID ,  Brain:=TRUE]\n\nTOTAL_ME_diff_counts <- vennCounts(TOTAL_ME[, c(\"Adrenal\", \"Heart\", \"SKM\", \"Brain\")])\n\nvennDiagram(TOTAL_ME_diff_counts)\n```\n\n\n```{r}\n\nTOTAL_ME[ (Adrenal==TRUE | Heart==TRUE | SKM==TRUE | Brain==TRUE) & ! ME %in% microexons_GENCODE & !  ME %in% microexons_Vastdb ,  ]\n\nTOTAL_ME[ ! ME %in% microexons_GENCODE, ]\n\n77/337\n35/337\n```\n\n\n\n```{r}\n\n\ncat( unique(Adrennal_ME$mgi_symbol), sep='\\n')\ncat( unique(SKM_ME$mgi_symbol), sep='\\n')\n\ncat( unique(Heart_ME$mgi_symbol), sep='\\n')\n\ncat( unique(Brain_ME[!exon_ID %in% ME_blacklist$ME  ]$mgi_symbol), sep='\\n')\n```\n\n\n\n\n\n\n```{r}\n\nchr1_+_151812756_151812768\n\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==2 & exon_ID=='chr13_-_55507863_55507874',  c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\", \"Diff\") ]\n\n\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\"  & exon_ID=='chr1_+_151812756_151812768',   ]\n\n\nME_cov_filtered[ME=='chr11_+_120001073_120001089',]\n\nBrain_ME[exon_ID=='chr1_+_151812756_151812768'\t,]\n\n'chr1_+_151812756_151812768'\t\n```\n\n\n```{r}\nTOTAL_diff_exons_ME_cluster_info[ME_cluster==\"NM3\" & Tissue_cluster==2 & Coord==\"chr1:134311529-134311555\",  ]\n\nTOTAL_diff_exons[ME_cluster==\"NM3\" & Tissue_cluster==2 & 'chr7:102002294-102002336' == Coord, ]\n\nchr7_+_102002295_102002336\n\nchr7:102002295-102002,336\n\n\nchr7_+_102002294_102002309\n\nchr9_-_75521366_75521378\n\nchr9_+_47836743_47836770\n\n\n\n\n```\n\n\n```{r}\nadrenal_string_interactions\nAdrenal_ME\n```\n\n\n```{r}\n\n\n\nplot_interactions_string <-  function (tissue_string_interactions, tissue_ME ){\n  \n  \n  \n  node_counts <- table(cbind(tissue_string_interactions$node1 , tissue_string_interactions$node2))\n  \n  node_count_table <- data.table( node_counts)\n  colnames(node_count_table) <- c(\"gene\", \"interactions\")\n  \n  \n  \n  node_count_table[, mgi_symbol:=gene ]\n  node_count_table[ gene==\"Spna2\" ,  mgi_symbol:=\"Sptan1\"]\n  \n  \n  node_count_table <- merge(node_count_table, tissue_ME, by=\"mgi_symbol\")\n  \n  node_count_table <- node_count_table[order(-interactions)]\n  node_count_table$mgi_symbol <- factor(node_count_table$mgi_symbol , levels = unique(node_count_table$mgi_symbol))\n  node_count_table$exon_ID <- factor(node_count_table$exon_ID , levels = unique(node_count_table$exon_ID))\n  \n  node_count_table[exon_ID %in% microexons_GENCODE |  exon_ID %in% microexons_Vastdb  , type:=\"Annotated\" ]\n  node_count_table[ !exon_ID %in% microexons_GENCODE  , type:=\"Novel in Genecode\" ]\n  node_count_table[ !exon_ID %in% microexons_Vastdb  , type:=\"Novel in VastDB\" ]\n  node_count_table[!exon_ID %in% microexons_GENCODE &  !exon_ID %in% microexons_Vastdb  , type:=\"Novel in both\" ]\n  \n   node_count_table$type <- factor(node_count_table$type , levels = c(\"Annotated\", \"Novel in Genecode\", \"Novel in VastDB\", \"Novel in both\"  ))\n   \n   node_count_table[ , N_genes:=.N  , by=\"mgi_symbol\"]\n   top <- unique(node_count_table$mgi_symbol)[ 1:15 ]\n  \n  ggplot( node_count_table[mgi_symbol %in% top, ] ) +\n    geom_bar(aes(x=mgi_symbol, y=interactions/N_genes, fill=type), colour=\"black\", stat=\"identity\") +\n    #scale_x_discrete(labels= node_count_table$mgi_symbol) +\n    xlab(\"Microexon gene\") +\n    ylab(\"Number of protein interactions per gene\") +\n    theme(panel.background = element_rect(fill = 'white', colour = 'black'), axis.text.x = element_text(angle = 45), legend.position=\"none\" )\n  \n  return(node_count_table)\n}\n\n\n  \n  #return(node_count_table)\n```\n\n\n```{r}\nadrenal_string_interactions <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/Adrenal/string_interactions.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\nadrenal_int <- plot_interactions_string(adrenal_string_interactions, Adrenal_ME)\n```\n\n\n```{r}\n\nAdrenal_ME[mgi_symbol==\"Dctn1\",]\n\n```\n\n\n```{r}\n\n'chr6_+_83183935_83183956' %in% microexons_GENCODE\n\nnode_count_table[mgi_symbol==\"Dctn1\",]\n```\n\n```{r}\n'chr6_+_83197320_83197333' %in% microexons_Vastdb\n'chr6_+_83197320_83197333' %in% microexons_GENCODE\n```\n\n\n```{r}\nSKM_string_interactions <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/SKM/string_interactions.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\nSKM_int <-  plot_interactions_string(SKM_string_interactions, SKM_ME)\n\n\n```\n\n\n\n```{r}\nSKM_ME[mgi_symbol==\"Dnm2\",]\n\n```\n\n\n```{r}\ncompare_whippet_MicroExonator[ exon_ID==\"chr6_+_83197318_83197333\",  c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\", \"Diff\", \"Delta.delta\" )  ]\n```\n\n\n```{r}\nHeart_string_interactions <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/Heart/string_interactions.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\nheart_int <- plot_interactions_string(Heart_string_interactions, Heart_ME)\n\n\n```\n\n\n\n```{r}\n\nHeart_ME_strict <- Heart_ME\n\nHeart_ME[ !exon_ID %in% Heart_ME_strict$exon_ID,  ]\n\nHeart_ME[mgi_symbol==\"Araf\",]\n```\n\n\n```{r}\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\"& Tissue_cluster==13 & exon_ID==\"chr11_-_86701060_86701081\",  c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\", \"Diff\", \"Delta.delta\" )  ]\n```\n\n\n\n\n```{r}\ncompare_whippet_MicroExonator[ , Delta.delta:=DeltaPsi.x-DeltaPsi.y]\n\n\nggplot(compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==13, ]) +\n  \n  geom_histogram( aes(Delta.delta) )\n\nhist(compare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==13, Delta.delta])\n\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==13 & exon_ID=='chr3_+_136932021_136932040',   c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\", \"Diff\", \"Delta.delta\" )  ]\n```\n\n\n```{r}\ncompare_whippet_MicroExonator[ME_cluster==\"NM3\" & Tissue_cluster==13 & exon_ID=='chr3_+_136932021_136932040',   c(\"exon_ID\", \"Psi_A.x\", \"Psi_A.y\", \"Psi_B.x\", \"Psi_B.y\", \"Diff\", \"Delta.delta\" )  ]\n```\n\n\n\n\n```{r}\n\nME_blacklist <- fread(\"./../New_report/out_filtered_ME.blacklist.txt\", header=F)\ncolnames(ME_blacklist) <- \"ME\"\n```\n\n\n\n\n```{r, fig.width}\nBrain_string_interactions <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/Brain/string_interactions.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\nbrain_int <- plot_interactions_string(Brain_string_interactions, Brain_ME[!exon_ID %in% ME_blacklist$ME])\n\n\n```\n\n\n\n```{r}\nplot_interactions_string(Brain_string_interactions, Brain_ME)\n```\n\n\n\n```{r, fig.height=4, fig.width=16}\nlibrary(cowplot)\n\n\nplot_grid(adrenal_int, brain_int, heart_int, SKM_int, nrow=1) \n\n```\n\n\n\n```{r, fig.width=20}\nBrain_string_interactions <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/Brain/string_interactions.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\nBrain_string_interactions_out <- plot_interactions_string(Brain_string_interactions, Brain_ME[!exon_ID %in% ME_blacklist$ME])\n\n\n```\n\n\n\n```{r}\nBrain_string_interactions_out[type==\"Novel in VastDB\", ][order(-interactions)]\n```\n\n\n```{r}\nPPI_centrality[ mgi_symbol==\"Spna2\" ,  mgi_symbol:=\"Sptan1\"]\n\nBrain_string_interactions_out <- merge(Brain_string_interactions_out, PPI_centrality, by=\"mgi_symbol\")\n\n\nBrain_string_interactions_out_stats <-  Brain_string_interactions_out[ , .( median_eigen_centrality =median(eigen_centrality),\n                                                                            mean_eigen_centrality =mean(eigen_centrality),\n                                                                            median_betweenness =median(betweenness),\n                                                                            N=.N\n                                                                             )  , by=\"ME_cluster\" ]\n\n\n\nggplot(Brain_string_interactions_out_stats[N>=10, ]) +\n  geom_text(aes(mean_eigen_centrality, median_betweenness, label=ME_cluster))\n```\n\n\n```{r}\nBrain_string_interactions_out[ ME_cluster %in% c(\"I1\", \"I2\", \"I3\", \"I4\") , ME_cluster_class:=\"Included\"]\nBrain_string_interactions_out[ ME_cluster %in% c(\"E1\", \"E2\", \"E3\") , ME_cluster_class:=\"Excluded\"]\nBrain_string_interactions_out[ ME_cluster %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\") , ME_cluster_class:=\"Neuronal\"]\nBrain_string_interactions_out[ ME_cluster %in% c(\"NM1\", \"NM2\", \"NM3\") , ME_cluster_class:=\"Neuromuscular\"]\nBrain_string_interactions_out[ ME_cluster %in% c(\"M1\") , ME_cluster_class:=\"Muscular\"]\nBrain_string_interactions_out[ ME_cluster %in% c(\"NN1\", \"NN2\") , ME_cluster_class:=\"Non-neuronal\"]\n```\n\n\n```{r}\n\nsub <- Brain_string_interactions_out[ME_cluster == \"N2\"]\n\nsub$type <- factor(sub$type, levels = c(\"Annotated\", \"Novel in Genecode\", \"Novel in VastDB\", \"Novel in both\"))\n\n\nggplot(sub) +\n  \n  geom_text( aes(x=eigen_centrality, y=interactions, colour=type, label=ME_cluster) ) \n\n\n\n\n\n\n  geom_text_repel(data = sub[type==\"Novel in both\"],\n                  colour=\"black\", aes(x=eigen_centrality, y=interactions)), \n                  label=)\n  \nsub$type\n\n\n```\n\n\n\n```{r}\n\nlibrary(\"ggrepel\")\nlibrary(\"plyr\")\n\nME_PSI_brain_age[ , c(\"ME\", \"days\")]\n\nBrain_string_interactions_out_PSI_min50\n\nsub <- merge(Brain_string_interactions_out[!exon_ID %in% ME_blacklist$ME], Brain_string_interactions_out_PSI_min50[ , c(\"exon_ID\", \"min50_day\")], by.y=\"exon_ID\", by.x=\"exon_ID\")\n\n\nsub$type <- mapvalues(sub$type, \n          from = c(\"Annotated\", \"Novel in Genecode\", \"Novel in VastDB\", \"Novel in both\"),\n          to =  c(\"Annotated\", \"Missing in Genecode\", \"Missing in VastDB\", \"Missing in both\") )\n\n\nggplot(sub) +\n  \n  geom_point( aes(x=eigen_centrality, y=min50_day, colour=type) )  +\n  \n  \n  \n    geom_text_repel(data=sub[ (type!=\"Annotated\" & eigen_centrality>=0.20) | (type==\"Annotated\" & eigen_centrality>=0.5)  ],\n                  aes(x=eigen_centrality, y=min50_day, colour=type), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  segment.size = 0.2,\n                  label=sub[(type!=\"Annotated\" & eigen_centrality>=0.15) | (type==\"Annotated\" & eigen_centrality>=0.5)  , mgi_symbol] ) +\n  xlab(\"Eigen centrality\") + \n  ylab(\"Embryonic time to reach PSI 0.5\") +\n  theme_bw()\n\n\n\n\n  #  geom_text_repel(data = sub[type==\"Novel in both\"],\n #                 colour=\"black\", aes(x=eigen_centrality, y=interactions), \n#                  label= sub[type==\"Novel in both\", mgi_symbol] )\n    \n```\n\n\n```{r}\n\nggplot(sub) +\n  geom_text_repel(data=sub[ (type!=\"Annotated\" & eigen_centrality>=0.20) | (type==\"Annotated\" & eigen_centrality>=0.5)  ],\n                  aes(x=eigen_centrality, y=min50_day, colour=type), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  segment.size = 0.2,\n                  label=sub[(type!=\"Annotated\" & eigen_centrality>=0.15) | (type==\"Annotated\" & eigen_centrality>=0.5)  , mgi_symbol] ) +\n  \ngeom_jitter( aes(x=eigen_centrality, y=min50_day, colour=type), width = 0.01, height = 0.25)  +\n  xlab(\"Eigen centrality\") + \n  ylab(\"Embryonic time to reach PSI 0.5\") +\n  theme_bw()\n```\n\n```{r}\n\ncor(sub$eigen_centrality, sub$gene_min50_day, method = \"pearson\")\n\n```\n\n\n\n```{r}\n\na <- Brain_string_interactions_out[!exon_ID %in% ME_blacklist$ME]\n\nggplot(a) +\n  \n    geom_point( aes(x=eigen_centrality, y=max_Entropy, colour=type) )\n\n\n  \n    geom_text_repel(data = sub[ (type!=\"Annotated\" & eigen_centrality>=0.20) | (type==\"Annotated\" & eigen_centrality>=0.7)  ],\n                  aes(x=eigen_centrality, y=min50_day, colour=type), \n                  nudge_y      = 0.5,\n                  direction    = \"x\",\n                  segment.size = 0.2,\n                  label=sub[(type!=\"Annotated\" & eigen_centrality>=0.15) | (type==\"Annotated\" & eigen_centrality>=0.7)  , mgi_symbol] )\n\n  \n\n```\n\n\n\n```{r}\ntable(sub[, ME_cluster])\n```\n\n\n```{r}\n\nsub[, gene_min50_day:=min(min50_day), by=gene]\n\n\n\nggplot(unique(sub[, c(\"gene\", \"gene_min50_day\", \"eigen_centrality\")])) +\n  \n  geom_boxplot(aes(x= eigen_centrality >= 0.5, y = gene_min50_day)) +\n  geom_jitter( aes(x= eigen_centrality >= 0.5, y = gene_min50_day) ) + \n    ylab(\"Embryonic time to reach PSI 0.5\") +\n  theme_bw()\n\n```\n\n\n\n\n```{r}\nwilcox.test( sub[eigen_centrality >= 0.5, gene_min50_day] , sub[eigen_centrality < 0.5, gene_min50_day],   mu=0,  conf.int=T, conf.level=0.95, paired=FALSE, exact=T, correct=T)\n\n```\n\n```{r}\nwilcox.test( sub[eigen_centrality >= 0.7, gene_min50_day] , sub[eigen_centrality < 0.7, gene_min50_day],   mu=0, alt=\"less\", conf.int=T, conf.level=0.95, paired=FALSE, exact=T, correct=T)\n\n```\n\n\n\n```{r}\nggplot(Brain_string_interactions_out) +\n  geom_histogram(aes(x=eigen_centrality, bins=20)) +\n  xlab(\"Eigen entrality\") +\n  ylab(\"count\")\n\n```\n\n```{r}\nBrain_string_interactions_out[eigen_centrality>=0.8]\n```\n\n\n\n```{r}\nBrain_string_interactions_out_stats[N>=10, ][order(-mean_eigen_centrality)]\n```\n\n\n\n```{r}\nlibrary(plyr)\n\nME_PSI_brain_age <- sub_ME_Tissues_clusters_PSI_brain[ , .(mean_PSI=mean(PSI, rm.na=T)) , by=c(\"ME\", \"ME_clusters\", \"age\") ]\n\n\nME_PSI_brain_age$days <- mapvalues(ME_PSI_brain_age$age, \n          from = c(\"10.5 day\", \"11.5 day\", \"12.5 day\", \"13.5 day\", \"14.5 day\", \"15.5 day\", \"16.5 day\", \"0 day\", \"8 week\"),\n          to = c(10.5, 11.5, 12.5, 13.5, 14.5, 15.5, 16.5, 21, 59) )\n\n\n\nBrain_string_interactions_out_PSI <- merge(Brain_string_interactions_out, ME_PSI_brain_age, by.x=\"exon_ID\", by.y=\"ME\")\n\nBrain_string_interactions_out_PSI$days <- as.numeric(as.character(Brain_string_interactions_out_PSI$days))\n\n\n\nBrain_string_interactions_out_PSI_min50 <- Brain_string_interactions_out_PSI[ mean_PSI>=0.5 ,  .(min50_day=min(days)) ,  by = c(\"exon_ID\", \"betweenness\", \"eigen_centrality\", \"ME_clusters\")]\n\nBrain_string_interactions_out_PSI_min50[ , N:=.N, by=\"min50_day\"]\n\n\nBrain_string_interactions_out_PSI_min50_stats <- Brain_string_interactions_out_PSI_min50[ , .( median_eigen_centrality =median(eigen_centrality),\n                                                                            mean_eigen_centrality =mean(eigen_centrality),\n                                                                            median_betweenness =median(betweenness),\n                                                                            N=.N),\n                                                                            by=\"min50_day\" ]\n\n\nggplot(Brain_string_interactions_out_PSI_min50_stats[N>=10, ] ) +\n  \n  geom_text(aes(median_eigen_centrality, median_betweenness, label=min50_day))\n  \n```\n\n```{r}\nwilcox.test(Brain_string_interactions_out[ME_cluster==\"N2\" , eigen_centrality], Brain_string_interactions_out[ME_cluster==\"N4\", eigen_centrality],   mu=0, alt=\"greater\", conf.int=T, conf.level=0.95, paired=FALSE, exact=T, correct=T)\n```\n\n\n\n```{r}\nwilcox.test(Brain_string_interactions_out[ME_cluster==\"N2\" , eigen_centrality], Brain_string_interactions_out[ME_cluster==\"N4\", eigen_centrality],   mu=0, alt=\"greater\", conf.int=T, conf.level=0.95, paired=FALSE, exact=T, correct=T)\n```\n\n\n```{r}\n\nggplot(Brain_string_interactions_out) +\n  geom_boxplot(aes(x = as.factor(ME_cluster), y = (eigen_centrality) )) +\n  geom_jitter(aes(x = as.factor(ME_cluster), y = (eigen_centrality) ))\n\n```\n\n\n```{r}\n\nBrain_string_interactions_out[ , N:=.N, by=\"ME_cluster\"]\n\n\nggplot( v) +\n  geom_boxplot(aes(x = ME_cluster==\"N2\" | ME_cluster==\"NM2\" , y = (eigen_centrality) )) +\n  geom_jitter(aes(x = ME_cluster==\"N2\" |  ME_cluster==\"NM2\", y = (eigen_centrality) ))\n\n```\n\n\n```{r}\nggplot(Brain_string_interactions_out_PSI_min50[N>=10]) +\n  geom_boxplot(aes(x = as.factor(min50_day), y = log(betweenness) )) +\n  geom_jitter(aes(x = as.factor(min50_day), y = log(betweenness) ))\n```\n\n\n```{r}\nggplot(Brain_string_interactions_out_PSI_min50[N>=10]) +\n  geom_boxplot(aes(x = as.factor(min50_day), y = eigen_centrality )) +\n  geom_jitter(aes(x = as.factor(min50_day), y = eigen_centrality ))\n```\n\n\n```{r}\nggplot(Brain_string_interactions_out_PSI_min50) +\n  geom_boxplot(aes(x = min50_day<=10.5, y = eigen_centrality )) +\n  geom_jitter(aes(x = min50_day<=10.5, y = eigen_centrality ))\n```\n\n\n\n```{r}\nggplot(Brain_string_interactions_out_PSI_min50) +\n  geom_violin(aes(x = min50_day<=12.5, y = eigen_centrality )) +\n  geom_jitter(aes(x = min50_day<=12.5, y = eigen_centrality ))\n```\n\n\n```{r}\nBrain_string_interactions_out_PSI_min50[, dev:=min50_day<=10.5]\n\nwilcox.test(Brain_string_interactions_out_PSI_min50$eigen_centrality~Brain_string_interactions_out_PSI_min50$dev,\n            mu=0, alt=\"less\", conf.int=T, conf.level=0.95, paired=FALSE, exact=T, correct=T)\n\n\nwilcox.test(Brain_string_interactions_out_PSI_min50$eigen_centrality~Brain_string_interactions_out_PSI_min50$dev)\n\nwilcox.test(Brain_string_interactions_out_PSI_min50$eigen_centrality ,Brain_string_interactions_out_PSI_min50$days)\n\n\nwilcox.test(eigen_centrality ~ dev , data=Brain_string_interactions_out_PSI_min50)\n\n```\n\n\n```{r}\n\nBrain_string_interactions_out_PSI_min50[min50_day==10.5, eigen_centrality]\n\n\nwilcox.test(Brain_string_interactions_out_PSI_min50[min50_day==10.5, eigen_centrality], Brain_string_interactions_out_PSI_min50[min50_day!=10.5, eigen_centrality])\n```\n\n\n```{r}\nkruskal.test(eigen_centrality ~ min50_day , data=Brain_string_interactions_out_PSI_min50)\n```\n\n\n\n```{r}\n\nBrain_string_interactions_out[ME_cluster==\"NM2\", ]\n\n```\n\n\n```{r, fig.width=10}\nneuronal_clusters_genes[, exon_ID:= ME]\n\nold_Brain_string_interactions <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/PPI/ME.PPI.tsv\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\nold_Brain_string_interactions_nodes <- plot_interactions_string(old_Brain_string_interactions, neuronal_clusters_genes)\n\n\n\n\n```\n\n\n\n```{r}\n\n\nBrain_ME[mgi_symbol==\"Kdm1b\",]\n\nneuronal_clusters_genes[mgi_symbol==\"Synj1\",]\n\n```\n\n```{r}\nME_clusters_table[ME==\"chr6_+_83197318_83197333\"]\n```\n## Tasic\n\n```{r}\nTasic_unpooled_diff_exons <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/Whippet_Delta/Tasic/GABA-ergic_Neuron_vs_Glutamatergic_Neuron.diff.Potential_Exon.exon_ID.only_ME.diff\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\nTasic_pooled_diff_exons <- data.table(read_delim(\"~/Google_Drive/Results/ME/Paper/New_report/Whippet_Delta/Tasic/Pool/TOTAL.Pool.only_ME.diff\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\n\n```\n\n\n```{r}\nlibrary(ggplot2)\nlibrary(data.table)\n\nggplot(Tasic_unpooled_diff_exons) +\n  geom_histogram(aes(Entropy))\n\n```\n\n\n```{r}\n\nTasic_unpooled_pooled <- merge(Tasic_unpooled_diff_exons[ , c(\"exon_ID\", \"Probability\", \"DeltaPsi\")], \nTasic_pooled_diff_exons[ , .( mean_Probability=mean(Probability), mean_DeltaPsi=mean(DeltaPsi)) , by=\"exon_ID\"  ],\nby=\"exon_ID\")\n\nTasic_unpooled_pooled[ , sig_unpool:=FALSE ]\nTasic_unpooled_pooled[ abs(DeltaPsi) >= 0.1 &  Probability>=0.9, sig_unpool:=TRUE ]\n\nTasic_unpooled_pooled[ , sig_pool:=FALSE ]\nTasic_unpooled_pooled[ abs(mean_DeltaPsi) >= 0.1 &  mean_Probability>=0.9, sig_pool:=TRUE ]\n\nTasic_pooled_diff_exons[exon_ID==\"chr16_+_91842627_91842642\",]\n\nTasic_pooled_diff_exons[, sd_probability:=sd(Probability) , by=\"Coord\"]\n\nggplot(Tasic_pooled_diff_exons) +\n  geom_histogram(aes(x=sd_probability))\n```\n\n\n```{r}\nnrow(Tasic_unpooled_pooled[sig_unpool==\"TRUE\"])\n\nnrow(Tasic_unpooled_pooled[sig_pool==\"TRUE\"])\n```\n\n\n```{r}\nggplot() +\n  \n  geom_point( data=Tasic_unpooled_pooled, aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability )) +\n\n  geom_point( data=Tasic_unpooled_pooled[sig_unpool==FALSE & sig_pool==TRUE]  , aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability ), color=\"red\" ) +\n\n  geom_point( data=Tasic_unpooled_pooled[sig_unpool==TRUE & sig_pool==TRUE]  , aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability ), color=\"green\" ) +\n\n  geom_point( data=Tasic_unpooled_pooled[sig_unpool==TRUE & sig_pool==FALSE]  , aes(mean_DeltaPsi - DeltaPsi , mean_Probability -Probability ), color=\"blue\" )\n\n```\n\n\n```{r}\n\n```\n\n\n```{r}\nTasic_unpooled_pooled[exon_ID==\"chr11_+_53590716_53590725\", ] \n```\n\n```{r}\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron_old <- Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron_old[ order(-abs(mean_DeltaPsi)), c(\"exon_ID\", \"mgi_symbol\", \"wikigene_description\", \"mean_DeltaPsi\", \"mean_Probability\")]\n```\n\n\n\n```{r}\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- Tasic_unpooled_pooled[abs(mean_DeltaPsi - DeltaPsi) <=0.25 &  sig_pool==TRUE, ]\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- merge( Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, ME_genes, by.x=\"exon_ID\", by.y=\"ME\")\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- merge( Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron , unique(gene_info_total[ , c(\"mgi_symbol\", \"wikigene_description\")]), by= \"mgi_symbol\")\n\n\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ order(-abs(mean_DeltaPsi)), c(\"exon_ID\", \"mgi_symbol\", \"wikigene_description\", \"mean_DeltaPsi\", \"mean_Probability\")]\n```\n\n\n\n\n\n```{r}\n\n#ref Slc4a10 https://www.frontiersin.org/articles/10.3389/fncel.2015.00223/full\n#ref Ank3 https://www.sciencedirect.com/science/article/pii/S0896627314009088\n#ref KCNMA1 https://www.sciencedirect.com/science/article/pii/S0896627313001852\n#ref Kif3a https://www.sciencedirect.com/science/article/pii/S089662730300062X\n# ref DLGAP https://molecularbrain.biomedcentral.com/articles/10.1186/s13041-017-0324-9\n\n\nPre_synaptic <- c( \"Ptprd\" , \"Ppfia2\", \"Dlgap1\", \"Gabrg2\", \"Kcnma1\", \"Kif3a\", \"Cadps\") \nPost_synaptic <- c( \"Nrxn3\" , \"Nrxn1\")\nPrePost_synaptic <- c(\"Ank3\",\"Slc4a10\")\n```\n\n\n\n\n\n```{r}\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[  !exon_ID %in% microexons_GENCODE &  !exon_ID %in% microexons_Vastdb , c(\"exon_ID\", \"mgi_symbol\", \"wikigene_description\", \"mean_DeltaPsi\", \"mean_Probability\")][order(-abs(mean_DeltaPsi))]\n\nmicroexons_GENCODE\nmicroexons_Vastdb\n```\n\n\n```{r}\nBrain_string_interactions_out[mgi_symbol==\"Akap13\",]\n```\n\n\n```{r}\nwrite.table(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, file = \"~/Desktop/Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron.txt\", append = FALSE, quote = F, sep = \"\\t\",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n```\n\n\n```{r}\n\n\nggplot()+\n  geom_point(data=Tasic_unpooled_pooled, aes(mean_DeltaPsi, mean_Probability)) +\n  geom_point(data=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, aes(mean_DeltaPsi, mean_Probability), color=\"red\")\n```\n\n\n\n```{r}\nlibrary(\"ggrepel\")\n\n\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron <- Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[!exon_ID %in% ME_blacklist$ME]\n\nggplot()+\n  geom_point(data=Tasic_unpooled_pooled, aes(mean_DeltaPsi, mean_Probability), color=\"grey\") +\n  geom_point(data=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron, aes(mean_DeltaPsi, mean_Probability), color=\"black\") +\n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Pre_synaptic],\n                  colour=\"forestgreen\", aes(x=mean_DeltaPsi, y=mean_Probability), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Pre_synaptic , mgi_symbol] ) +\n  \n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Post_synaptic],\n                  colour=\"firebrick4\", aes(x=mean_DeltaPsi, y=mean_Probability), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% Post_synaptic , mgi_symbol] ) +\n  \n  \n  geom_text_repel(data = Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% PrePost_synaptic],\n                  colour=\"darkgoldenrod\", aes(x=mean_DeltaPsi, y=mean_Probability), \n                  nudge_y      = 3,\n                  direction    = \"x\",\n                  angle        = 90,\n                  vjust        = 1,\n                  segment.size = 0.2,\n                  label=Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[mgi_symbol %in% PrePost_synaptic , mgi_symbol] ) +\n    \n  \n  ylim(0.5, 1.15) +\n  theme_bw() +\n  xlab(\"\") +\n  xlab(\"Mean delta PSI\") +\n  ylab(\"Mean probability\")\n\n\n\n\n```\n\n\n\n```{r}\n\n\n\n\nME_cluster_info_genes <- merge(ME_cluster_info, ME_genes, by=\"ME\")\n\n\nME_cluster_info_genes[ ME_clusters %in% c(\"I1\", \"I2\", \"I3\", \"I4\") , ME_cluster_class:=\"Included\"]\nME_cluster_info_genes[ ME_clusters %in% c(\"E1\", \"E2\", \"E3\") , ME_cluster_class:=\"Excluded\"]\nME_cluster_info_genes[ ME_clusters %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\") , ME_cluster_class:=\"Neuronal\"]\nME_cluster_info_genes[ ME_clusters %in% c(\"NM1\", \"NM2\", \"NM3\") , ME_cluster_class:=\"Neuromuscular\"]\nME_cluster_info_genes[ ME_clusters %in% c(\"M1\") , ME_cluster_class:=\"Muscular\"]\nME_cluster_info_genes[ ME_clusters %in% c(\"NN1\", \"NN2\") , ME_cluster_class:=\"Non-neuronal\"]\n\nggplot( ME_cluster_info_genes[ ME %in% Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ mgi_symbol %in% Pre_synaptic |  mgi_symbol %in% Post_synaptic |  mgi_symbol %in% PrePost_synaptic, exon_ID]] ) +\n  geom_bar(aes(x=ME_cluster_class), stat=\"count\") +\n  theme_bw()\n\n\n\n\n```\n\n\n```{r}\n ME_cluster_info_genes[ ME %in% Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ mgi_symbol %in% Pre_synaptic |  mgi_symbol %in% Post_synaptic |  mgi_symbol %in% PrePost_synaptic, exon_ID]] \n```\n\n\n\n```{r}\nSig_GABAergic_Neuron_vs_Glutamatergic_Neuron[order(-abs(mean_DeltaPsi)), ]\n```\n\n\n```{r}\ncat( unique(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron$mgi_symbol), sep=', ')\n```\n\n```{r}\ncat( unique(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron$mgi_symbol), sep='\\n')\n```\n\n\n## Tasic -Old analysis\n\n\n```{r}\n\nlibrary(readr)\n\nlibrary(Hmisc)\n\n\nTasic_sample_info <- data.table(read_delim(\"~/Google_Drive/Results/ME/Single_cell/Tasic/GSE71585.txt\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE))\n\n\nTasic_clustering <- data.table(read_delim(\"~/Google_Drive/Results/ME/Single_cell/Tasic/GSE71585_Clustering_Results.csv\", \n    \",\", escape_double = FALSE, trim_ws = TRUE))\n\ntasic_et_al_ST3 <- data.table(read_csv(\"~/Google_Drive/Results/ME/Single_cell/Tasic/tasic_et_al.ST3.csv\"))\n\n\n\ntasic_metadata <- merge(Tasic_sample_info, tasic_et_al_ST3, by.x=\"Sample_Name_s\", by.y=\"GEO Sample Accession\")\n\ntasic_metadata <- tasic_metadata[, c(\"Run_s\", \"GEO Sample Title\") ]\n\n\ntasic_metadata <- merge( Tasic_clustering, tasic_metadata, by.x=\"sample_title\", by.y=\"GEO Sample Title\")\n\n\nwrite.table(tasic_metadata, file = \"../../Paper/New_report/Tasic_clustering.txt\", append = FALSE, quote = F, sep = \"\\t\",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n\ntasic_metadata[ , c(\"Run_s\", \"primary_type\", \"broad_type\") ]\n\n\nME_cov_filtered_tasic <- merge( ME_cov_filtered, \n       tasic_metadata[, c(\"sample_title\", \"broad_type\", \"core_intermediate\", \"primary_type\", \"Run_s\")],\n       by.x=\"FILE_NAME\", by.y = \"Run_s\")\n\n\n\n\n\n\n\n\nME_cov_filtered_tasic_primary_type <- ME_cov_filtered_tasic[, .(sum_ME_coverage=sum(sum_ME_coverage),\n                          sum_SJ_coverage =sum(sum_SJ_coverage),\n                          total_cov_alternatives_3 = sum(total_cov_alternatives_3),\n                          total_cov_alternatives_5 = sum(total_cov_alternatives_5)\n                          ), by=c(\"primary_type\", \"broad_type\", \"ME\") ]\n\n\n\n\n\n\nME_cov_filtered_tasic_primary_type[,PSI:=(sum_ME_coverage/(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5))]\n\nmin_PSI_sum <- 5\n  \nME_cov_filtered_tasic_primary_type[sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5<min_PSI_sum, PSI:=NaN]\n\n\n\nME_cov_filtered_tasic_primary_type[ , \n            `:=`(\n              lower=binconf(x=sum_ME_coverage, n=(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5) )[, \"Lower\"],\n              upper=binconf(x=sum_ME_coverage, n=(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5) )[, \"Upper\"]\n              ) ]\n\n\n\n#ME_cov_filtered_tasic_primary_type <- merge(ME_cov_filtered_tasic_primary_type, neuronal_clusters, by=\"ME\")\n```\n\n\n\n```{r}\nME_cluster_info_genes[ ME %in% Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ mgi_symbol %in% Pre_synaptic |  mgi_symbol %in% Post_synaptic |  mgi_symbol %in% PrePost_synaptic, exon_ID]]\n\n\n Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ mgi_symbol %in% Pre_synaptic |  mgi_symbol %in% Post_synaptic |  mgi_symbol %in% PrePost_synaptic, ]\n```\n\n\n```{r}\n\ntargets <- merge(Sig_GABAergic_Neuron_vs_Glutamatergic_Neuron[ mgi_symbol %in% Pre_synaptic |  mgi_symbol %in% Post_synaptic |  mgi_symbol %in% PrePost_synaptic, ], ME_final[,c('ME', 'len_micro_exon_seq_found')], by.x=\"exon_ID\", by.y=\"ME\")\n\n\ntargets[, max_len:=max(len_micro_exon_seq_found) , by='mgi_symbol']\n\ntargets <- targets[mgi_symbol==\"Ptprd\" | len_micro_exon_seq_found==max_len]\n\ntargets[ , ME_ID:=paste(mgi_symbol, rank(exon_ID), sep=\"_\")   , mgi_symbol]\n\n\ntargets[mgi_symbol %in% c(\"Gabrg2\", \"Nrxn3\", \"Nrxn1\", \"Ptprd\")]\n\n\nME_target <- c(\"chr10_+_69980823_69980850\", \"chr11_-_41913969_41913993\", \"chr14_-_23449199_23449208\",  \"chr11_+_53590716_53590725\", \"chr14_-_23449199_23449211\" )\n\nGABA <- c(\"chr10_+_69980823_69980850\", \"chr14_-_12472397_12472406\", )\n\nGLU <- c(\"chr17_+_70718195_70718225\", \"chr11_-_41913969_41913993\")\n\n\n\nGABA <- c(\"chr10_+_69980823_69980850\", \"chr14_-_12472397_12472406\", )\nGLU <- c(\"chr17_+_70718195_70718225\" \"\", )\n\n         \n       \n\n```\n\n```{r}\n\ntarget_info2 <- merge(targets, ME_cov_filtered_tasic_primary_type, by.x=\"exon_ID\", by.y=\"ME\") \n\ntable(target_info2[, mgi_symbol])\n\nchr11_-_41913969_41913993\n\nME_cov_filtered_tasic_primary_type[ME==\"chr11_-_41913969_41913993\"]\n\n```\n\n\n\n```{r fig.width=10,  fig.height=10}\n\ntarget_info <- merge(targets, ME_cov_filtered_tasic_primary_type, by.x=\"exon_ID\", by.y=\"ME\") \n\ntarget_info[mgi_symbol==\"Ptprd\"]\n\n\nggplot(merge(targets[mgi_symbol %in% c(\"Gabrg2\", \"Nrxn3\", \"Nrxn1\", \"Ptprd\")], ME_cov_filtered_tasic_primary_type, by.x=\"exon_ID\", by.y=\"ME\")   ) +\n  geom_pointrange(aes(x=primary_type, y=PSI, colour= broad_type, group=broad_type, shape=broad_type, ymin=lower, ymax=upper))+\n  facet_grid(ME_ID~ . ) +\n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5)) \n```\n\n\n\n```{r}\nexclude <- c(\"Slc4a10\", )\n```\n\n\n\n```{r}\nME_cov_filtered_tasic[ME==\"chr14_-_23449199_23449208\"]\n\n\nME_cov_filtered_tasic_primary_type[ME==\"chr14_-_23449199_23449211\"]\n```\n\n\n```{r fig.width=15,  fig.height=20}\nggplot(ME_cov_filtered_tasic_primary_type[ ME %in% ME_target, ]  ) +\n  geom_pointrange(aes(x=primary_type, y=PSI, colour= broad_type, group=broad_type, shape=broad_type, ymin=lower, ymax=upper))+\n  theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0.5)) +\n  facet_grid(ME~ . )\n```\n\n\n\n\n```{r}\n\n\nME_cov_filtered_tasic_broad_type <- ME_cov_filtered_tasic[, .(sum_ME_coverage=sum(sum_ME_coverage),\n                          sum_SJ_coverage =sum(sum_SJ_coverage),\n                          total_cov_alternatives_3 = sum(total_cov_alternatives_3),\n                          total_cov_alternatives_5 = sum(total_cov_alternatives_5)\n                          ), by=c( \"broad_type\", \"ME\") ]\n\n\n\n\n\n\nME_cov_filtered_tasic_broad_type[,PSI:=(sum_ME_coverage/(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5))]\n\nmin_PSI_sum <- 5\n  \nME_cov_filtered_tasic_broad_type[sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5<min_PSI_sum, PSI:=NaN]\n\n\n\nME_cov_filtered_tasic_broad_type[ , \n            `:=`(\n              lower=binconf(x=sum_ME_coverage, n=(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5) )[, \"Lower\"],\n              upper=binconf(x=sum_ME_coverage, n=(sum_ME_coverage+sum_SJ_coverage+total_cov_alternatives_3+total_cov_alternatives_5) )[, \"Upper\"]\n              ) ]\n\n\n\nME_cov_filtered_tasic_broad_type[ , mean_PSI:=mean(PSI, na.rm = TRUE )  , by=\"ME\"  ]\nME_cov_filtered_tasic_broad_type[ , sd_PSI:=sd(PSI, na.rm = TRUE )  , by=\"ME\"  ]\n\nME_cov_filtered_tasic_broad_type[, zscore:=(PSI-mean_PSI)/sd_PSI ]\n\n\nggplot(ME_cov_filtered_tasic_broad_type) +\n  \n  geom_jitter(aes(x=broad_type, y=zscore))\n \n\n\n```\n\nPrinting simplified medatada for whippet comparisons \n\n\n\n\n```{r}\n\nwrite.table(metadata[ is.na(Paired.end)==T ,],  file = \"../../mm10/simple.metadata.txt\", append = FALSE, quote = F, sep = \"\\t\",\n            eol = \"\\n\", na = \"NA\", dec = \".\", row.names = F,\n            col.names = TRUE, qmethod = c(\"escape\", \"double\"),\n            fileEncoding = \"\")\n\nmetadata[ is.na(Paired.end)==T ,]\n\n\nneural tube_11.5 day\nhindbrain_0 day\n\n```\n\n\n\n#######\n\n\n```{r}\nME_cluster_info_con <- merge(ME_cluster_info, ME_final[, c(\"ME\", \"mean_conservations_vertebrates\")], by=\"ME\")\n\n\nggplot(ME_cluster_info_con)  +\n  geom_boxplot(aes(x=ME_clusters, y=mean_conservations_vertebrates)) +\n  theme_bw()\n\n\nc(\"I1\", \"E1\", \"E3\", \"I2\", \"N1\", \"M1\", \"N2\", \"NM3\", \"NM2\", \"N5\", \"NM1\", \"N3\", \"N4\", \"NN2\", \"E2\", \"I4\", \"I3\", \"NN1\")\n\nc(\"NM1\", \"NM2\", \"NM3\",  \"NN1\", \"NN2\", \"M1\", \"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"I1\", \"I2\", \"I3\", \"I4\", \"E1\", \"E2\", \"E3\")\n\nME_cluster_info_con$ME_clusters <- factor(ME_cluster_info_con$ME_clusters, levels = c(\"NM1\", \"NM2\", \"NM3\", \"M1\", \"N1\", \"N2\", \"N3\", \"N4\", \"N5\", \"NN1\", \"NN2\", \"I1\", \"I2\", \"I3\", \"I4\", \"E1\", \"E2\", \"E3\"))\n```\n\n```{r}\nME_cluster_info_by_con <- merge( ME_cluster_info_by, ME_cluster_info_con[ , .(cluster_mean_conservations_vertebrates=mean(mean_conservations_vertebrates)) , by=\"ME_clusters\"], by=\"ME_clusters\")\n\nggplot(ME_cluster_info_by_con, aes(x=symetrical_fraction, y=cluster_mean_conservations_vertebrates)) +\n  geom_text( label=ME_cluster_info_by_con$ME_clusters) +\n   geom_smooth(method = \"lm\", se = FALSE) +\n  theme_bw()\n\n```\n\n\n```{r}\nsummary(lm(symetrical_fraction ~ cluster_mean_conservations_vertebrates, ME_cluster_info_by_con))$r.squared\n\ncor(ME_cluster_info_by_con$symetrical_fraction, ME_cluster_info_by_con$cluster_mean_conservations_vertebrates, method = \"pearson\")\n```\n\n\n\n```{r}\n\nmm10_DanRer11 <- fread(\"../../Zebrafish/mm10_clusters.conserved.DanRer11.txt\")\n\nmm10_DanRer11[ ME_cluster %in% c(\"I1\", \"I2\", \"I3\", \"I4\") , ME_cluster_class:=\"Included\"]\nmm10_DanRer11[ ME_cluster %in% c(\"E1\", \"E2\", \"E3\") , ME_cluster_class:=\"Excluded\"]\nmm10_DanRer11[ ME_cluster %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\") , ME_cluster_class:=\"Neuronal\"]\nmm10_DanRer11[ ME_cluster %in% c(\"NM1\", \"NM2\", \"NM3\") , ME_cluster_class:=\"Neuromuscular\"]\nmm10_DanRer11[ ME_cluster %in% c(\"M1\") , ME_cluster_class:=\"Muscular\"]\nmm10_DanRer11[ ME_cluster %in% c(\"NN1\", \"NN2\") , ME_cluster_class:=\"Non-neuronal\"]\n\nggplot(mm10_DanRer11) +\n  geom_point(aes(x= U2_score_mm10 - U2_score_DanRer11, y = Phylop, colour = Ensembl )) +\n  theme_bw()\n```\n\n\n```{r}\nggplot(mm10_DanRer11) +\n  geom_histogram(aes(x= ME_len, fill = Ensembl ), binwidth=1) +\n  theme_bw()\n```\n\n\n```{r}\n\nmm10_DanRer11_cluster_class <- as.data.table(table(mm10_DanRer11[Ensembl==T]$ME_cluster_class))\n\ncolnames(mm10_DanRer11_cluster_class) <- c(\"ME_cluster_class\", \"N\")\n\nggplot(mm10_DanRer11_cluster_class, aes(x=\"\", y=N, fill=ME_cluster_class))+\n    geom_bar(width = 1, stat = \"identity\") +\n   coord_polar(\"y\", start=0)\n\n```\n\n\n```{r}\n\nmm10_DanRer11_cluster_class <- as.data.table(table(mm10_DanRer11[Ensembl==F]$ME_cluster_class))\n\ncolnames(mm10_DanRer11_cluster_class) <- c(\"ME_cluster_class\", \"N\")\n\nggplot(mm10_DanRer11_cluster_class, aes(x=\"\", y=N, fill=ME_cluster_class))+\n    geom_bar(width = 1, stat = \"identity\") +\n   coord_polar(\"y\", start=0)\n\n```\n\n```{r}\nmm10_DanRer11_cluster_class <- as.data.table(table(mm10_DanRer11[Ensembl==F]$ME_cluster_class))\n\nmm10_DanRer11_cluster_class <- mm10_DanRer11[ , .N , by=c(\"ME_cluster_class\", \"Ensembl\")]\n\n\nmm10_DanRer11_cluster_class[ , A:=\"Total\" ]\nmm10_DanRer11_cluster_class[ Ensembl==F , A:=\"Missing\" ]\nmm10_DanRer11_cluster_class$A <- factor(mm10_DanRer11_cluster_class$A, levels=c(\"Total\", \"Missing\"))\n\n\nggplot(mm10_DanRer11_cluster_class, aes(x=\"\", y=N, fill=ME_cluster_class))+\n    geom_bar(width = 1, stat = \"identity\") +\n   coord_polar(\"y\", start=0) +\n  xlab(NULL) +\n  ylab(\"Microexons conserved between mouse and zebrafish\") +\n  labs(fill = \"Microexon cluster class\") +\n  facet_grid( . ~ A)  +\n  theme_bw()\n\n```\n\n\n```{r}\n\nmm10_DanRer11_cluster_class_total <- mm10_DanRer11[  , .N , by=c(\"ME_cluster_class\", \"Ensembl\")]\nmm10_DanRer11_cluster_class_total[, type:=\"Total\"]\n\nmm10_DanRer11_cluster_class_mising <- mm10_DanRer11[ Ensembl==F , .N , by=c(\"ME_cluster_class\", \"Ensembl\")]\nmm10_DanRer11_cluster_class_mising[, type:=\"Missing\"]\n\nmm10_DanRer11_cluster_class <- rbind(mm10_DanRer11_cluster_class_total, mm10_DanRer11_cluster_class_mising)\nmm10_DanRer11_cluster_class$type <- factor(mm10_DanRer11_cluster_class$type, levels=c(\"Total\", \"Missing\"))\n\n\n\nggplot(mm10_DanRer11_cluster_class, aes(x=\"\", y=N, fill=ME_cluster_class))+\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\", start=0) +\n  xlab(NULL) +\n  ylab(\"Microexons conserved between mouse and zebrafish\") +\n  labs(fill = \"Microexon cluster class\") +\n  facet_grid( . ~ type)  +\n  theme_bw()\n\n\n\n```\n\n\n```{r}\n\nlibrary(readr)\nME_cluster_info_con_danRer11 <- read_delim(\"~/Google_Drive/Results/ME/Zebrafish/ME_cluster_info_con.danRer11.txt\", \n    \"\\t\", escape_double = FALSE, trim_ws = TRUE)\n\nME_cluster_info_con_danRer11 <- data.table(ME_cluster_info_con_danRer11)\n\ntable(ME_cluster_info_con_danRer11$GENCODE)\ntable(ME_cluster_info_con_danRer11$VastDB)\n\nME_cluster_info_con_danRer11[GENCODE==\"FALSE\" & VastDB==\"FALSE\" , ]\n\n\nmm10_DanRer11_cluster_class[, org:=\"danrer11\"]\n\n```\n\n\n\n```{r}\n\n\n\nME_cluster_info_con_danRer11[ ,  Ensembl:=(GENCODE==T | VastDB==T) ]\n\n\nME_cluster_info_con_danRer11[, ME_cluster:=ME_clusters ]\n\nME_cluster_info_con_danRer11[ ME_cluster %in% c(\"I1\", \"I2\", \"I3\", \"I4\") , ME_cluster_class:=\"Included\"]\nME_cluster_info_con_danRer11[ ME_cluster %in% c(\"E1\", \"E2\", \"E3\") , ME_cluster_class:=\"Excluded\"]\nME_cluster_info_con_danRer11[ ME_cluster %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\") , ME_cluster_class:=\"Neuronal\"]\nME_cluster_info_con_danRer11[ ME_cluster %in% c(\"NM1\", \"NM2\", \"NM3\") , ME_cluster_class:=\"Neuromuscular\"]\nME_cluster_info_con_danRer11[ ME_cluster %in% c(\"M1\") , ME_cluster_class:=\"Muscular\"]\nME_cluster_info_con_danRer11[ ME_cluster %in% c(\"NN1\", \"NN2\") , ME_cluster_class:=\"Non-neuronal\"]\n\n\nDanRer11_mouse_cluster_class_total <- ME_cluster_info_con_danRer11[  , .N , by=c(\"ME_cluster_class\", \"Ensembl\")]\nDanRer11_mouse_cluster_class_total[, type:=\"Total\"]\n\nDanRer11_mouse_cluster_class_mising <- ME_cluster_info_con_danRer11[ Ensembl==F , .N , by=c(\"ME_cluster_class\", \"Ensembl\")]\nDanRer11_mouse_cluster_class_mising[, type:=\"Missing\"]\n\nDanRer11_mouse_cluster_class <- rbind(DanRer11_mouse_cluster_class_total, DanRer11_mouse_cluster_class_mising)\nDanRer11_mouse_cluster_class$type <- factor(DanRer11_mouse_cluster_class$type, levels=c(\"Total\", \"Missing\"))\n\n\n\nmm10_DanRer11_cluster_class[, org:=\"zebrafish\"]\nDanRer11_mouse_cluster_class[, org:=\"mouse\"]\n\nTOTAL_cluster_class <- rbind(mm10_DanRer11_cluster_class, DanRer11_mouse_cluster_class)\n\n\nggplot(TOTAL_cluster_class, aes(x=\"\", y=N, fill=ME_cluster_class))+\n  geom_bar(width = 1, stat = \"identity\") +\n  #coord_polar(\"y\", start=0) +\n  xlab(NULL) +\n  ylab(\"Microexons conserved between mouse and zebrafish\") +\n  labs(fill = \"Microexon cluster class\") +\n  facet_grid( org ~ type)  +\n  theme_bw()\n\n\n```\n\n```{r}\nDanRer11_mouse_cluster_class_total\nmm10_DanRer11\n\nDanRer11_mm10\n\nDanRer11_mouse_cluster_class_total\n```\n\n```{r}\nDanRer11_mm10\n\n\nDanRer11_mm10[ ME_cluster %in% c(\"I1\", \"I2\", \"I3\", \"I4\") , ME_cluster_class:=\"Included\"]\nDanRer11_mm10[ ME_cluster %in% c(\"E1\", \"E2\", \"E3\") , ME_cluster_class:=\"Excluded\"]\nDanRer11_mm10[ ME_cluster %in% c(\"N1\", \"N2\", \"N3\", \"N4\", \"N5\") , ME_cluster_class:=\"Neuronal\"]\nDanRer11_mm10[ ME_cluster %in% c(\"NM1\", \"NM2\", \"NM3\") , ME_cluster_class:=\"Neuromuscular\"]\nDanRer11_mm10[ ME_cluster %in% c(\"M1\") , ME_cluster_class:=\"Muscular\"]\nDanRer11_mm10[ ME_cluster %in% c(\"NN1\", \"NN2\") , ME_cluster_class:=\"Non-neuronal\"]\n\n\ntable(DanRer11_mm10$Ensembl)\ntable(mm10_DanRer11$Ensembl)\n\ntable(ME_cluster_info_con_danRer11$GENCODE_VastDB)\n```\n\n\n\n```{r}\n\nmm10_DanRer11[, Annotated:=Ensembl]\nmm10_DanRer11[, Organism:=\"Zebrafish\"]\n\n\n\nME_cluster_info_con_danRer11[, Annotated:=GENCODE_VastDB]\nME_cluster_info_con_danRer11[, Organism:=\"Mouse\"]\n\n\nmouse_zebrafish_total <- rbind(mm10_DanRer11[, c(\"ME\", \"ME_cluster\", \"Annotated\", \"Organism\")], ME_cluster_info_con_danRer11[, c(\"ME\", \"ME_cluster\",  \"Annotated\", \"Organism\")])\n```\n\n\n```{r}\nlibrary(ggplot2)\n\nggplot(mouse_zebrafish_total) +\n  geom_bar(aes(x=ME_cluster,  fill=Annotated), stat = \"count\", position = \"fill\") +\n  facet_grid( Organism ~ .) +\n  theme_bw() + \n  theme(axis.title = element_text(size = 13, \n    colour = NA), axis.text.x = element_text(angle = 45))\n\nmouse_zebrafish_total\n```\n\n\n```{r}\nneural_net_corr <- fread(\"../New_report/neural_net/Total_up_seqs_with_highest_correlation.tsv\")\n\nggplot(neural_net_corr, aes(x = Cluster, y=cor, color=ClusterClass)) + \n  geom_boxplot() + xlab(\"Cluster\") + ylab(\"Correlation (Pearson R)\") + \n  ggtitle(\"Gene-wise correlations between actual and predicted microexon inclusion rates per cluster\") + theme_bw() + \n  guides(color=guide_legend(title=\"Cluster class\")) + scale_color_discrete() +\n    theme(axis.title = element_text(size = 13, \n    colour = NA), axis.text.x = element_text(angle = 45))\n```\n\n\n\n\n\n```{r}\nME_cluster_info\n\n\n```\n",
    "created" : 1574864667159.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3482899572",
    "id" : "68C4C7F1",
    "lastKnownWriteTime" : 1555525394,
    "last_content_update" : 1574864689936,
    "path" : "~/Google_Drive/Results/ME/Paper/Figures/Figures_Parada_et_al.Rmd",
    "project_path" : null,
    "properties" : {
        "chunk_output_type" : "inline"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}