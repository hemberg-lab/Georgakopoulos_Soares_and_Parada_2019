my.breaks <- c(seq(-6, -0.1, by=0.1), 0,
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
"grey",
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F, color = my.colors)
matrix.non_template
View(matrix.non_template)
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
"grey",
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
"grey"
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
"grey"
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
"grey",
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
my.colors
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
my.breaks <- c(seq(-6, -0.1, by=0.1),
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "red", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F, color = my.colors)
my.colors
my.colors <- c(colorRampPalette(colors = c("blue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F, color = my.colors)
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F, color = my.colors)
RBP_heatmap.non_template
matrix.non_template
matrix.non_template["ZC3H8−human_K562_ENCFF207UUG"]
matrix.non_template["ZC3H8−human_K562_ENCFF207UUG",]
matrix.non_template
View(matrix.non_template)
data_table.non_template
data_table.non_template[V1=="ZC3H8−human_K562_ENCFF207UUG", ]
data_table.non_template
View(data_table.non_template)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Name", 1:20, sep = "")
paletteLength <- 50
myColor <- colorRampPalette(c("yellow", "white", "blue"))(paletteLength)
# length(breaks) == length(paletteLength) + 1
# use floor and ceiling to deal with even/odd length pallettelengths
myBreaks <- c(seq(min(test), 0, length.out=ceiling(paletteLength/2) + 1),
seq(max(test)/paletteLength, max(test), length.out=floor(paletteLength/2)))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F, color = myColor)
test = matrix(rnorm(200), 20, 10)
test[1:10, seq(1, 10, 2)] = test[1:10, seq(1, 10, 2)] + 3
test[11:20, seq(2, 10, 2)] = test[11:20, seq(2, 10, 2)] + 2
test[15:20, seq(2, 10, 2)] = test[15:20, seq(2, 10, 2)] + 4
colnames(test) = paste("Test", 1:10, sep = "")
rownames(test) = paste("Name", 1:20, sep = "")
paletteLength <- 50
myColor <- colorRampPalette(c("blue", "white", "red"))(paletteLength)
# length(breaks) == length(paletteLength) + 1
# use floor and ceiling to deal with even/odd length pallettelengths
myBreaks <- c(seq(min(test), 0, length.out=ceiling(paletteLength/2) + 1),
seq(max(test)/paletteLength, max(test), length.out=floor(paletteLength/2)))
my.breaks <- c(seq(-6, -0.1, by=0.1),
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F, color = myColor)
bk1 <- c(seq(-2,0.9,by=0.1),0.999)
bk1 <- c(1.001,seq(1.1,3,by=0.1))
bk <- c(bk1,bk2)  #combine the break limits for purpose of graphing
bk1 <- c(seq(-2,0.9,by=0.1),0.999)
bk1 <- c(1.001,seq(1.1,3,by=0.1))
bk <- c(bk1,bk2)  #combine the break limits for purpose of graphing
bk1 <- c(seq(-2,0.9,by=0.1),0.999)
bk2 <- c(1.001,seq(1.1,3,by=0.1))
bk <- c(bk1,bk2)  #combine the break limits for purpose of graphing
my_palette <- c(colorRampPalette(colors = c("darkblue", "lightblue"))(n = length(bk1)-1),
"gray38", "gray38",
c(colorRampPalette(colors = c("darkred", "tomato1"))(n = length(bk2)-1)))
my.breaks <- c(seq(-6, -0.1, by=0.1),
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my_palette, breaks = bk, scale = "none")
my.breaks
bk
bk1 <- c(seq(-6,0.9,by=0.1),0.999)
bk2 <- c(1.001,seq(1.1,6,by=0.1))
bk <- c(bk1,bk2)  #combine the break limits for purpose of graphing
my_palette <- c(colorRampPalette(colors = c("darkblue", "lightblue"))(n = length(bk1)-1),
"gray38", "gray38",
c(colorRampPalette(colors = c("darkred", "tomato1"))(n = length(bk2)-1)))
my.breaks <- c(seq(-6, -0.1, by=0.1),
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my_palette, breaks = bk, scale = "none")
my_palette
bk
my.breaks <- c(seq(-6, -0.1, by=0.1),
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my_palette, breaks = bk, scale = "none")
my.breaks <- c(seq(-6, -0.1, by=0.1),
seq(0, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.breaks <- c(seq(-6, -0.1, by=0.1),
0,
seq(0.1, 6, by=0.1))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
"gray",
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.breaks <- c(seq(-6, -0.001, by=0.001),
seq(0.001, 6, by=0.001))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.breaks <- c(seq(-6, -0.001, by=0.001),
seq(0.001, 6, by=0.001))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("gray", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "lightgray"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("white", "orange", "firebrick"))(length(my.breaks)/2))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("yellow", "orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.breaks <- c(seq(-6, -0.001, by=0.001),
seq(0.001, 6, by=0.001))
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("orange", "red", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("orange", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("red", "firebrick", "purple"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "white"))(length(my.breaks)/2),
colorRampPalette(colors = c("bisque", "red", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "azure"))(length(my.breaks)/2),
colorRampPalette(colors = c("bisque", "red", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
my.colors <- c(colorRampPalette(colors = c("darkblue", "lightblue", "antiquewhite"))(length(my.breaks)/2),
colorRampPalette(colors = c("bisque", "red", "firebrick"))(length(my.breaks)/2))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.non_template
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 9, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 9, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 11, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 12, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.template <- pheatmap::pheatmap(matrix.template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=12)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
#clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
#          from =1:8,
#          to = c("ns2", "iB2", "iB1", "ieBD", "ns1", "ieB2", "ieB1", "ieBU"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "eiB2", "iB1", "iB2", "ieBD", "ieBU", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
library(DescTools)
library(stringr)
library(ggplot2)
library(data.table)
library(readr)
library(Hmisc)
library(cowplot)
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=12)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
#clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
#          from =1:8,
#          to = c("ns2", "iB2", "iB1", "ieBD", "ns1", "ieB2", "ieB1", "ieBU"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "eiB2", "iB1", "iB2", "ieBD", "ieBU", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
clustering.total.stats <- clustering.total[ , .N , by =c("clusters.non_template", "clusters.template")]
ggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +
geom_alluvium( width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_discrete(limits = c("clusters.non_template", "clusters.template"), expand = c(.05, .05))
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=8)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
from =1:8,
to = c("ns2", "iB2", "iB1", "ieBD", "ns1", "ieB2", "ieB1", "ieBU"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "eiB2", "iB1", "iB2", "ieBD", "ieBU", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
clustering.total.stats <- clustering.total[ , .N , by =c("clusters.non_template", "clusters.template")]
ggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +
geom_alluvium( width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_discrete(limits = c("clusters.non_template", "clusters.template"), expand = c(.05, .05))
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=12)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
#clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
#          from =1:8,
#          to = c("ns2", "iB2", "iB1", "ieBD", "ns1", "ieB2", "ieB1", "ieBU"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "eiB2", "iB1", "iB2", "ieBD", "ieBU", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
clustering.total.stats <- clustering.total[ , .N , by =c("clusters.non_template", "clusters.template")]
ggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +
geom_alluvium( width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_discrete(limits = c("clusters.non_template", "clusters.template"), expand = c(.05, .05))
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=12)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
from =1:8,
to = c("ns2", "iB2", "iB1", "ieBD", "ns1", "ieB2", "ieB1", "ieBU"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "eiB2", "iB1", "iB2", "ieBD", "ieBU", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
clustering.total.stats <- clustering.total[ , .N , by =c("clusters.non_template", "clusters.template")]
ggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +
geom_alluvium( width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_discrete(limits = c("clusters.non_template", "clusters.template"), expand = c(.05, .05))
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=8)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
from =1:8,
to = c("ns2", "iB2", "iB1", "ieBD", "ns1", "ieB2", "ieB1", "ieBU"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "eiB2", "iB1", "iB2", "ieBD", "ieBU", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
clustering.total.stats <- clustering.total[ , .N , by =c("clusters.non_template", "clusters.template")]
ggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +
geom_alluvium( width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_discrete(limits = c("clusters.non_template", "clusters.template"), expand = c(.05, .05))
library(ggalluvial)
library(plyr)
clustering.non_template <- hclust(dist(matrix.non_template), method = "ward.D")
clusters.non_template <- cutree(clustering.non_template, k=8)
clustering.template <- hclust(dist(matrix.template), method = "ward.D")
clusters.template <- cutree(clustering.template, k=8)
clustering.total <-  as.data.frame(cbind(clusters.non_template, clusters.template = clusters.template[names(clusters.non_template)]))
clustering.total$clusters.non_template <- mapvalues(clustering.total$clusters.non_template ,
from =1:8,
to = c("ns2", "iB2", "iB1", "iBsU", "ns1", "ieB2", "ieB1", "iBsD"))
clustering.total$clusters.template <- mapvalues(clustering.total$clusters.template ,
from =1:8,
to = c("ns1", "ns2", "ieB2", "iB1", "iB2", "iBsU", "iBsD", "ieB1"))
clustering.total$sample <- rownames(clustering.total)
clustering.total <- data.table(clustering.total)
clustering.total.stats <- clustering.total[ , .N , by =c("clusters.non_template", "clusters.template")]
ggplot(clustering.total.stats, aes(y=N, axis1=clusters.non_template, axis2=clusters.template)) +
geom_alluvium( width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_discrete(limits = c("clusters.non_template", "clusters.template"), expand = c(.05, .05))
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 9, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none")
?Overlap
?pheatmap
RBP_heatmap.template <- pheatmap::pheatmap(matrix.template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames, show_rownames)
RBP_heatmap.template <- pheatmap::pheatmap(matrix.template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_rownames=F)
RBP_heatmap.template <- pheatmap::pheatmap(matrix.template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.non_template <- pheatmap::pheatmap(matrix.non_template, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
nt_t.colnames <-  c(paste0("ntUP",  as.character(seq(-200,190, 10)) ), paste0("ntDOWN",  as.character(seq(-200,190, 10)) ),  c(paste0("tUP",  as.character(seq(-200,190, 10)) ), paste0("tDOWN",  as.character(seq(-200,190, 10)) )) )
matrix.total <- cbind(matrix.non_template, matrix.template)
colnames(matrix.total) <- nt_t.colnames
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 8, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 9, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 12, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
matrix.total
matrix.total[1:300,]
dim(matrix.total)
c(c(1:30), c(40:70), c(80, 160))
colnames(matrix.total)
colnames(matrix.total[c(c(1:30), c(40:70), c(80, 160)), ])
colnames(matrix.total[c(c(1:30), c(60:100), c(120, 160)), ])
dim(matrix.total[c(c(1:30), c(60:100), c(120, 160)), ])
dim(, matrix.total[c(c(1:30), c(60:100), c(120, 160)) ])
dim(matrix.total[ , c(c(1:30), c(60:100), c(120, 160)) ])
dim(matrix.total[ , c(c(1:30), c(50:90), c(110, 160)) ])
View(matrix.total[ , c(c(1:30), c(50:90), c(110, 160)) ])
dim(matrix.template)
dim(matrix.template[, c(1:20)])
dim(matrix.template[, c( c(1:30), c(60:80) )    ])
dim(matrix.template[, c( c(1:30), c(60:79) )    ])
dim(matrix.template[, c( c(1:30), c(60:90) )    ])
dim(matrix.template[, c( c(1:30), c(60:89) )    ])
dim(matrix.template[, c( c(1:30), c(60:79) )    ])
dim(matrix.template[, c( c(1:30), c(60:88) )    ])
dim(matrix.template[, c( c(1:30), c(60:79) )    ])
dim(matrix.template[, c( c(1:30), c(50:79) )    ])
colnames(matrix.template[, c( c(1:30), c(50:79) )    ])
colnames(matrix.template[, c( c(1:29), c(50:80) )    ])
dim(matrix.template[, c( c(1:29), c(50:80) )    ])
colnames(matrix.template[, c( c(1:29), c(50:80) )    ])
colnames(matrix.template[, c( c(1:30), c(50:80) )    ])
colnames(matrix.template[, c( c(1:30), c(51:80) )    ])
dim(matrix.template[, c( c(1:30), c(51:80) )    ])
matrix.total[, c( c(1:30), c(51:110), (131:160) )    ]
dim(matrix.total[, c( c(1:30), c(51:110), (131:160) )    ])
matrix.total.trim <- matrix.total[, c( c(1:30), c(51:110), (131:160) )    ]
matrix.total.trim
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
?hclust()
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D2", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "single", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "complete", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "average", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=F, show_colnames = F)
hc_rows <- hclust(dist(d), method = "ward.D")
hc_rows <- hclust(dist(matrix.total.trim), method = "ward.D")
RBP_clusters <-  cutree(hc_rows, k=10)
RBP_clusters
cbind(names(RBP_clusters), RBP_clusters)
data.table(cbind(names(RBP_clusters), as.numeric(RBP_clusters)))
RBP_clusters.table <- data.table(cbind(names(RBP_clusters), as.numeric(RBP_clusters)))
RBP_clusters.table
colnames(RBP_clusters.table) <- c("ID", "cluster")
RBP_clusters.table
RBP_heatmap.total <- pheatmap::pheatmap(matrix.total.trim, fontsize = 4,   cutree_rows = 10, clustering_method = "ward.D", cluster_cols=F,
color = my.colors, breaks = my.breaks, scale = "none",
show_rownames=T, show_colnames = F)
RBP_heatmap.total
matrix.total.trim
matrix.total.trim[, cluster=="10" ]
matrix.total.trim[ cluster=="10", ]
matrix.total.trim[ str_split(ID, "_") , ]
matrix.total.trim[ , str_split(ID, "_")  ]
matrix.total.trim
str_split_fixed(RBP_clusters.table$ID, "_and_", 2)
RBP_clusters.table <- data.table(cbind(names(RBP_clusters), as.numeric(RBP_clusters)))
colnames(RBP_clusters.table) <- c("ID", "cluster")
RBP_clusters.table <- data.table(RBP_clusters.table)
RBP_clusters.table
RBP_clusters.table[ , str_split(ID, "_")  ]
RBP_clusters.table
str_split_fixed(RBP_clusters.table$ID, "_", 3)
cbind(RBP_clusters.table, str_split_fixed(RBP_clusters.table$ID, "_", 3))
RBP_clusters.table <- cbind(RBP_clusters.table, str_split_fixed(RBP_clusters.table$ID, "_", 3))
RBP_clusters.table
RBP_clusters.table <- cbind(RBP_clusters.table, str_split_fixed(RBP_clusters.table$V1, "-", 2))
RBP_clusters.table
RBP_clusters.table <- RBP_clusters.table[, c(1,2,4,5,6,7)]
RBP_clusters.table
colnames(RBP_clusters.table) <- c("ID", "cluster", "Cell", "Gene", "Organism")
RBP_clusters.table
colnames(RBP_clusters.table) <- c("ID", "cluster", "File", "Cell", "Gene", "Organism")
RBP_clusters.table
colnames(RBP_clusters.table) <- c("ID", "cluster", "Cell", "File", "Gene", "Organism")
RBP_clusters.table
ggplot(RBP_clusters.table) +
geom_bar(aes(x=cluster, fill=Cell), stat = count)
ggplot(RBP_clusters.table) +
geom_bar(aes(x=cluster, fill=Cell), stat = "count")
RBP_clusters.table
cat(RBP_clusters.table[ cluster=="1", ], sep="\n" )
RBP_clusters.table
library(DescTools)
library(stringr)
library(ggplot2)
library(data.table)
library(readr)
library(Hmisc)
library(cowplot)
cat(RBP_clusters.table[ cluster=="1", ], sep="\n" )
RBP_clusters.table
cat(RBP_clusters.table[ cluster=="1", ], sep="\n" )
RBP_clusters.table
cat(RBP_clusters.table[ cluster=="1", Gene], sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="1", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="2", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="3", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="4", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="5", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="6", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="7", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="8", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="9", Gene]), sep="\n" )
cat(unique(RBP_clusters.table[ cluster=="10", Gene]), sep="\n" )
